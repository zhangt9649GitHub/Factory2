$(document).ready(function(){
	layui.use(['form', 'table', 'layer', 'laydate'], function() {
		
		var	layer = layui.layer,
			form = layui.form,
			laydate = layui.laydate,
			table = layui.table;




		// 动态表格
		table.render({
			elem: '#idTest',
			limit: 10000,
			cellMinWidth: 80, // 定义所有常规单元格的最小宽度
			totalRow: true, //开启合计行区域
			data: [],
			cols: [
				[
					{
						field: 'partsCd',
						title: '部品CD',
						unresize: true,
						totalRowText: '合计（小写）',
						width: 120
					}, {
						field: 'goodsName',
						title: '商品名称',
						unresize: true
					}, {
						field: 'lotNumber',
						title: '批次',
						unresize: true
					}, {
						field: 'boxesNumber',
						title: '箱数',
						unresize: true,
						totalRow: true
					}, {
						field: 'monthlySalesVolume',
						title: '月贩卖量',
						unresize: true
					}, {
						field: 'sellingMonths',
						title: '贩卖月数',
						unresize: true
					},  {
						field: 'skgCount',
						title: '现库存',
						unresize: true
					},  {
						field: 'unitPrice',
						title: '单价',
						unresize: true
					}, {
						field: 'quantity',
						title: '数量',
						unresize: true,
						totalRow: true
					}, {
						field: 'totalPrice',
						title: '总价',
						unresize: true,
						totalRow: true
					}, {
						field: 'netWeight',
						title: '净重',
						unresize: true,
						totalRow: true
					}, {
						field: 'grossWeight',
						title: '毛重',
						unresize: true,
						totalRow: true
					}, {
						field: 'volume',
						title: '体积',
						unresize: true,
						totalRow: true
					}, {
						field: 'customsCategory',
						title: '海关类别',
						unresize: true
					}, {
						field: 'seaTariffNumber',
						title: '海关税号',
						unresize: true
					}, {
						field: 'comment',
						title: '备注',
						unresize: true
					}, {
						field: 'status',
						title: '状态',
						unresize: true
					}

				]
			],
			done: function(){
				$('.layui-table-view .layui-table-body').niceScroll({
					cursorcolor: '#828e94',
					cursorborder: "1px solid #828e94",
				});
			}
		});

		// 获取编辑信息
		let formdata = new FormData();
		formdata.append('salesOrderId', parseInt($('input[name="salesOrderId"]').val()));
		axios.post('/salesOrder/getSalesOrderById', formdata
		).then(function (response) {
			let data = response.data;

			if(data.code == 0){

				let orderType;
				switch (data.data.orderType) {
					case 1:
						orderType = '日本出口';
						break;
					case 2:
						orderType = '天津贩卖';
						break;

				}


				form.val('formTest',{
					'salesOrderNumber': data.data.salesOrderNumber,
					'orderType': orderType,
					'addtime': data.data.addtime,
					'customerId': data.data.customer.customerName,
					'comment': data.data.comment,
					'staffName': data.data.staff.name
				});
				let salesOrderDetailsList = [];
				$.each(data.data.salesOrderDetailsList,function (i,item) {
					let arr ={
						goodsId: item.goods.goodsId,
						partsCd: item.goods.partsCd,
						goodsName: item.goods.goodsName,
						lotNumber: item.lotNumber,
						boxesNumber: item.goods.boxesNumber,
						monthlySalesVolume: item.goods.monthlySalesVolume,
						sellingMonths: item.goods.sellingMonths,
						skgCount: item.skgCount,
						unitPrice: item.unitPrice,
						quantity: item.quantity,
						totalPrice: item.totalPrice,
						netWeight: Number(item.goods.netWeight)* Number(item.quantity),
						grossWeight: Number(item.goods.grossWeight)* Number(item.quantity),
						volume: Number(item.goods.volume)* Number(item.quantity),

						// 记录净重/毛重/体积的初始值
						netWeight1: item.goods.netWeight,
						grossWeight1: item.goods.grossWeight,
						volume1: item.goods.volume,

						customsCategory: item.customsCategory,
						seaTariffNumber: item.seaTariffNumber,
						comment: item.comment,
						status: (item.status == 1) ? '未配货':'已配货'
					};
					salesOrderDetailsList.push(arr);
				});


				table.reload('idTest', {
					data: salesOrderDetailsList
				});

			}

		});


		// 触发事件
		var active = {
	
		};
		// 点击调用
		$('body').on('click', '.zq-active', function() {
			var othis = $(this),
				type = othis.data('type');
			
			active[type] ? active[type].call(this, othis) : '';
		});
	
	
	
	})
});
