<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mingyuansoftware.aifactory.mapper.ProductionOrderDetailsMapper">
  <resultMap id="BaseResultMap" type="com.mingyuansoftware.aifactory.model.ProductionOrderDetails">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="production_order_details_id" jdbcType="INTEGER" property="productionOrderDetailsId" />
    <result column="production_order_id" jdbcType="INTEGER" property="productionOrderId" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="total_task_amount" jdbcType="DECIMAL" property="totalTaskAmount" />
    <result column="sales_booking" jdbcType="DECIMAL" property="salesBooking" />
    <result column="quantity" jdbcType="DECIMAL" property="quantity" />
    <result column="production_instruction_id" jdbcType="INTEGER" property="productionInstructionId" />
    <result column="bom_id" jdbcType="INTEGER" property="bomId" />
    <result column="cycle" jdbcType="VARCHAR" property="cycle" />
    <result column="shift" jdbcType="VARCHAR" property="shift" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="is_read" jdbcType="TINYINT" property="isRead" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="inventory_quantity" jdbcType="DECIMAL" property="inventoryQuantity" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from production_order_details
    where production_order_details_id = #{productionOrderDetailsId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mingyuansoftware.aifactory.model.ProductionOrderDetails">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="productionOrderDetailsId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into production_order_details (production_order_id, goods_id, total_task_amount,sales_booking,quantity,
      production_instruction_id,bom_id, `cycle`, shift,
      `comment`,inventory_quantity,status)
    values (#{productionOrderId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{totalTaskAmount,jdbcType=DECIMAL},
    #{salesBooking,jdbcType=DECIMAL},#{quantity,jdbcType=DECIMAL},#{productionInstructionId,jdbcType=INTEGER},#{bomId,jdbcType=INTEGER},
    #{cycle,jdbcType=VARCHAR}, #{shift,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR},#{inventoryQuantity,jdbcType=DECIMAL},#{status,jdbcType=TINYINT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.mingyuansoftware.aifactory.model.ProductionOrderDetails">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update production_order_details
    set production_order_id = #{productionOrderId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      total_task_amount = #{totalTaskAmount,jdbcType=DECIMAL},
      sales_booking = #{salesBooking,jdbcType=DECIMAL},
      quantity = #{quantity,jdbcType=DECIMAL},
      production_instruction_id = #{productionInstructionId,jdbcType=INTEGER},
      `cycle` = #{cycle,jdbcType=VARCHAR},
      shift = #{shift,jdbcType=VARCHAR},
      `comment` = #{comment,jdbcType=VARCHAR}
    where production_order_details_id = #{productionOrderDetailsId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select production_order_details_id, production_order_id, goods_id,total_task_amount,sales_booking,
    quantity, production_instruction_id,`cycle`, shift, `comment`,status,inventory_quantity
    from production_order_details
    where production_order_details_id = #{productionOrderDetailsId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select production_order_details_id, production_order_id, goods_id, total_task_amount,sales_booking,
    quantity, production_instruction_id,`cycle`, shift, `comment`,status,inventory_quantity
    from production_order_details
  </select>

  <select id="selectProductionOrderDetailsById" resultType="com.mingyuansoftware.aifactory.model.ProductionOrderDetails">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select pod.production_order_details_id, pod.production_order_id, pod.goods_id, pod.quantity, pod.production_instruction_id,
    pod.`cycle`, pod.shift, pod.`comment`,gd.parts_cd,gd.goods_name,gd.monthly_sales_volume,(pod.total_task_amount) as total_task_amount,
    pig.production_instruction_id,IFNULL(pod.sales_booking,0) AS sales_booking,IFNULL(skg.skg_count,0) AS skg_count,gd.unit,gd.specification,pi.serial_number,
    pod.status
    from production_order_details as pod
    LEFT JOIN goods as gd ON (gd.goods_id = pod.goods_id)
    LEFT JOIN production_instruction_goods AS pig ON (pod.production_order_id = pig.production_instruction_id)
    LEFT JOIN (select skgid,sum(skg_count) AS skg_count,warehouse_id,skg_type,gid from stock_kucun_goods GROUP BY gid)
    AS skg ON (pig.goods_id = skg.gid)
    LEFT JOIN production_instruction AS pi ON (pod.production_instruction_id =pi.production_instruction_id)
    where production_order_id = #{productionOrderId}
  </select>

  <select id="selectProductionOrderDetailsList" resultType="com.mingyuansoftware.aifactory.model.dto.ProductionOrderDetailsDto">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    SELECT
    pod.production_order_details_id,IFNULL(pod.quantity,0) AS quantity,pod.`cycle`,pod.shift,pod.is_read,
    gd.parts_cd,gd.goods_name,gd.specification,gd.unit,gd.category,pod.goods_id,pod.`status`,po.production_order_id,
    pi.serial_number,po.production_order_number,IFNULL(pod.sales_booking,0) AS sales_booking,
    IFNULL(skg.skg_count,0)AS skg_count,IFNULL(pod.total_task_amount,0)as total_task_amount,IFNULL(pod.inventory_quantity,0) AS producedAmount
    FROM
    production_order_details AS pod
    LEFT JOIN goods AS gd ON (gd.goods_id = pod.goods_id)
    LEFT JOIN production_instruction AS pi ON (pod.production_instruction_id = pi.production_instruction_id)
    LEFT JOIN production_order as po ON (pod.production_order_id = po.production_order_id)
    LEFT JOIN (select skgid,sum(skg_count) AS skg_count,warehouse_id,skg_type,gid from stock_kucun_goods GROUP BY gid)
    AS skg ON (pod.goods_id = skg.gid)
    LEFT JOIN production_instruction_goods AS pig ON (pod.production_instruction_id = pig.production_instruction_id and pod.goods_id = pig.goods_id)
    <where>
      <if test="productionOrderDetailsDto.partsCd != null and productionOrderDetailsDto.partsCd != ''">
        AND gd.parts_cd like "%"#{productionOrderDetailsDto.partsCd}"%"
      </if>
      <if test="productionOrderDetailsDto.goodsName != null and productionOrderDetailsDto.goodsName != ''">
        AND gd.goods_name like "%"#{productionOrderDetailsDto.goodsName}"%"
      </if>
      <if test="productionOrderDetailsDto.specification != null and productionOrderDetailsDto.specification  != ''">
        AND gd.specification like "%"#{productionOrderDetailsDto.specification}"%"
      </if>
      <if test="productionOrderDetailsDto.unit != null and productionOrderDetailsDto.unit != ''">
        AND gd.unit like "%"#{productionOrderDetailsDto.unit}"%"
      </if>
      <if test="productionOrderDetailsDto.totalTaskAmount != null and productionOrderDetailsDto.totalTaskAmount  != ''or productionOrderDetailsDto.totalTaskAmount  == '0'.toString()">
        AND pod.total_task_amount = #{productionOrderDetailsDto.totalTaskAmount}
      </if>
      <if test="productionOrderDetailsDto.salesBooking != null and productionOrderDetailsDto.salesBooking  != '' or productionOrderDetailsDto.salesBooking  == '0'.toString()">
        AND pod.sales_booking = #{productionOrderDetailsDto.salesBooking}
      </if>
      <if test="productionOrderDetailsDto.skgCount != null and productionOrderDetailsDto.skgCount  != '' or productionOrderDetailsDto.skgCount  == '0'.toString()">
        AND skg.skg_count = #{productionOrderDetailsDto.skgCount}
      </if>
      <if test="productionOrderDetailsDto.quantity != null and productionOrderDetailsDto.quantity  != '' or productionOrderDetailsDto.quantity  == '0'.toString()">
        AND pod.quantity = #{productionOrderDetailsDto.quantity}
      </if>
      <if test="productionOrderDetailsDto.cycle != null and productionOrderDetailsDto.cycle  != ''">
        AND pod.`cycle` like "%"#{productionOrderDetailsDto.cycle}"%"
      </if>
      <if test="productionOrderDetailsDto.shift != null and productionOrderDetailsDto.shift  != ''">
        AND pod.shift like "%"#{productionOrderDetailsDto.shift}"%"
      </if>
      <if test="productionOrderDetailsDto.serialNumber != null and productionOrderDetailsDto.serialNumber  != ''">
        AND pi.serial_number like "%"#{productionOrderDetailsDto.serialNumber}"%"
      </if>
      <if test="productionOrderDetailsDto.productionOrderNumber != null and productionOrderDetailsDto.productionOrderNumber  != ''">
        AND po.production_order_number like "%"#{productionOrderDetailsDto.productionOrderNumber}"%"
      </if>
      <if test="productionOrderDetailsDto.category != null and productionOrderDetailsDto.category  != '' or productionOrderDetailsDto.category == '0'.toString()">
        AND gd.category = #{productionOrderDetailsDto.category}
      </if>
      <if test="productionOrderDetailsDto.producedAmount != null and productionOrderDetailsDto.producedAmount  != '' or productionOrderDetailsDto.producedAmount == '0'.toString()">
        AND IFNULL(pod.inventory_quantity,0) = #{productionOrderDetailsDto.producedAmount}
      </if>
      AND po.is_delete =0
    </where>
    ORDER BY pod.production_order_details_id DESC
  </select>

  <select id="selectCountProductionOrderDetails" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    SELECT
    COUNT(pod.production_order_details_id)
    FROM
    production_order_details AS pod
    LEFT JOIN goods AS gd ON (gd.goods_id = pod.goods_id)
    LEFT JOIN production_instruction AS pi ON (pod.production_instruction_id = pi.production_instruction_id)
    LEFT JOIN production_order as po ON (pod.production_order_id = po.production_order_id)
    LEFT JOIN (select skgid,sum(skg_count) AS skg_count,warehouse_id,skg_type,gid from stock_kucun_goods GROUP BY gid)
    AS skg ON (pod.goods_id = skg.gid)
    LEFT JOIN production_instruction_goods AS pig ON (pod.production_instruction_id = pig.production_instruction_id and pod.goods_id = pig.goods_id)
    <where>
      <if test="productionOrderDetailsDto.partsCd != null and productionOrderDetailsDto.partsCd != ''">
        AND gd.parts_cd like "%"#{productionOrderDetailsDto.partsCd}"%"
      </if>
      <if test="productionOrderDetailsDto.goodsName != null and productionOrderDetailsDto.goodsName != ''">
        AND gd.goods_name like "%"#{productionOrderDetailsDto.goodsName}"%"
      </if>
      <if test="productionOrderDetailsDto.specification != null and productionOrderDetailsDto.specification  != ''">
        AND gd.specification like "%"#{productionOrderDetailsDto.specification}"%"
      </if>
      <if test="productionOrderDetailsDto.unit != null and productionOrderDetailsDto.unit != ''">
        AND gd.unit like "%"#{productionOrderDetailsDto.unit}"%"
      </if>
      <if test="productionOrderDetailsDto.totalTaskAmount != null and productionOrderDetailsDto.totalTaskAmount  != ''or productionOrderDetailsDto.totalTaskAmount  == '0'.toString()">
        AND pod.total_task_amount = #{productionOrderDetailsDto.totalTaskAmount}
      </if>
      <if test="productionOrderDetailsDto.salesBooking != null and productionOrderDetailsDto.salesBooking  != '' or productionOrderDetailsDto.salesBooking  == '0'.toString()">
        AND pod.sales_booking = #{productionOrderDetailsDto.salesBooking}
      </if>
      <if test="productionOrderDetailsDto.skgCount != null and productionOrderDetailsDto.skgCount  != '' or productionOrderDetailsDto.skgCount  == '0'.toString()">
        AND skg.skg_count = #{productionOrderDetailsDto.skgCount}
      </if>
      <if test="productionOrderDetailsDto.quantity != null and productionOrderDetailsDto.quantity  != '' or productionOrderDetailsDto.quantity  == '0'.toString()">
        AND pod.quantity = #{productionOrderDetailsDto.quantity}
      </if>
      <if test="productionOrderDetailsDto.cycle != null and productionOrderDetailsDto.cycle  != ''">
        AND pod.`cycle` like "%"#{productionOrderDetailsDto.cycle}"%"
      </if>
      <if test="productionOrderDetailsDto.shift != null and productionOrderDetailsDto.shift  != ''">
        AND pod.shift like "%"#{productionOrderDetailsDto.shift}"%"
      </if>
      <if test="productionOrderDetailsDto.serialNumber != null and productionOrderDetailsDto.serialNumber  != ''">
        AND pi.serial_number like "%"#{productionOrderDetailsDto.serialNumber}"%"
      </if>
      <if test="productionOrderDetailsDto.productionOrderNumber != null and productionOrderDetailsDto.productionOrderNumber  != ''">
        AND po.production_order_number like "%"#{productionOrderDetailsDto.productionOrderNumber}"%"
      </if>
      <if test="productionOrderDetailsDto.category != null and productionOrderDetailsDto.category  != '' or productionOrderDetailsDto.category == '0'.toString()">
        AND gd.category = #{productionOrderDetailsDto.category}
      </if>
      <if test="productionOrderDetailsDto.producedAmount != null and productionOrderDetailsDto.producedAmount  != '' or productionOrderDetailsDto.producedAmount == '0'.toString()">
        AND IFNULL(pod.inventory_quantity,0) = #{productionOrderDetailsDto.producedAmount}
      </if>
    </where>
    ORDER BY pod.production_order_details_id DESC
  </select>

  <update id="updateProductionOrderDetailsIsRead">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update production_order_details
    set
    is_read = 1
    where production_order_details_id = #{productionOrderDetailsId,jdbcType=INTEGER}
  </update>

  <select id="selectPdaProductionEntryList" resultType="com.mingyuansoftware.aifactory.model.ProductionOrderDetails">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select pod.production_order_details_id, pod.production_order_id, pod.goods_id, pod.quantity, pod.production_instruction_id,
    pod.`cycle`, pod.shift, pod.`comment`,po.production_order_number,pi.serial_number
    from production_order_details as pod
    LEFT JOIN production_order AS po ON (pod.production_order_id = po.production_order_id)
    left join production_instruction as pi ON (pod.production_instruction_id =pi.production_instruction_id)
    where po.state &lt; 3
  </select>

  <select id="selectPdaProductionEntryListCount" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select COUNT(pod.production_order_details_id)
    from production_order_details as pod
    LEFT JOIN production_order AS po ON (pod.production_order_id = po.production_order_id)
    left join production_instruction as pi ON (pod.production_instruction_id =pi.production_instruction_id)
    where po.state &lt; 3
  </select>

  <select id="selectPdaProductionEntryGoodsList" resultType="com.mingyuansoftware.aifactory.model.ProductionEntryGoods">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select pod.production_order_details_id, pod.production_order_id, pod.goods_id, pod.quantity as amount, pod.production_instruction_id,
    pod.`cycle`, pod.shift, pod.`comment`,gd.parts_cd,gd.goods_name,gd.specification
    from production_order_details as pod
    LEFT JOIN goods as gd ON (pod.goods_id = gd.goods_id)
    where pod.production_order_id = #{productionOrderId}
  </select>

  <select id="selectPdaProductionEntryGoodsListCount" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select COUNT(pod.production_order_details_id)
    from production_order_details as pod
    LEFT JOIN goods as gd ON (pod.goods_id = gd.goods_id)
    where pod.production_order_id = #{productionOrderId}
  </select>

  <select id="selectProductionOrderGoodsCount" resultType="com.mingyuansoftware.aifactory.model.dto.PDAProductionEntryDto">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select production_order_details_id, production_order_id as poId, goods_id, quantity as amount, production_instruction_id,
    `cycle`, shift, `comment`
    from production_order_details
    where production_order_id = #{productionOrderId} and goods_id = #{goodsId}
  </select>

  <select id="selectProductionOrderDetailsByIdAndGoodsId" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select production_order_details_id, production_order_id, goods_id, total_task_amount,sales_booking,
    quantity, production_instruction_id,`cycle`, shift, `comment`,status,IFNULL(inventory_quantity,0) AS inventory_quantity
    from production_order_details
    where production_order_id = #{productionOrderId} and goods_id = #{goodsId} and status &lt; 3
    ORDER BY production_instruction_id ASC
  </select>

  <update id="updateProductionOrderDetailsStatus">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update production_order_details
    set
    inventory_quantity = #{inventoryQuantity},
    status = #{status}
    where production_order_details_id = #{productionOrderDetailsId,jdbcType=INTEGER}
  </update>

  <select id="selectProductionPlanningAnalysisList" resultType="com.mingyuansoftware.aifactory.model.ProductionPlanningAnalysis" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select pod.production_order_details_id, pod.goods_id,gd.parts_cd,gd.goods_name,IFNULL(gd.monthly_sales_volume,0) AS monthly_sales_volume,
    IFNULL(skg.skgCount,0) AS skgCount,IFNULL(pg.totalTaskAmount,0) AS totalTaskAmount,IFNULL(pod.quantity,0) AS newTask,
    IFNULL(pg.remainingAmount,0) AS remainingAmount,pi.serial_number
    from production_order_details AS pod
    LEFT JOIN production_order AS po ON (pod.production_order_id = po.production_order_id)
    LEFT JOIN goods AS gd ON (pod.goods_id = gd.goods_id)
    LEFT JOIN (select gid,sum(skg_count) as skgCount from stock_kucun_goods group by gid) AS skg ON (pod.goods_id = skg.gid)
    LEFT JOIN (select goods_id,sum(production_schedule) as totalTaskAmount,sum(unfinished_quantity) as remainingAmount  from production_instruction_goods GROUP BY goods_id) AS pg ON (pod.goods_id =pg.goods_id)
    LEFT JOIN production_instruction AS pi ON (pod.production_instruction_id = pi.production_instruction_id)
    WHERE po.state &lt; 3 AND po.is_delete = 0
    <if test="productionPlanningAnalysis.partsCd != null and productionPlanningAnalysis.partsCd != ''">
      AND gd.parts_cd like "%"#{productionPlanningAnalysis.partsCd}"%"
    </if>
    <if test="productionPlanningAnalysis.goodsName != null and productionPlanningAnalysis.goodsName != ''">
      AND gd.goods_name like "%"#{productionPlanningAnalysis.goodsName}"%"
    </if>
  </select>

  <select id="selectProductionOrderDetailsByGoodsId" resultType="com.mingyuansoftware.aifactory.model.ProductionOrderDetails">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select pod.production_order_details_id, pod.production_order_id, pod.goods_id, pod.total_task_amount,pod.sales_booking,
    pod.quantity, pod.production_instruction_id,pod.`cycle`, pod.shift, pod.`comment`,pod.status,
    IFNULL(pod.inventory_quantity,0) AS inventory_quantity,gd.parts_cd
    from production_order_details as pod
    LEFT JOIN production_order AS po ON (pod.production_order_id = po.production_order_id)
    LEFT JOIN goods AS gd ON (pod.goods_id = gd.goods_id)
    where pod.goods_id = #{goodsId} AND pod.status &lt; 3
    ORDER BY pod.production_order_details_id ASC LIMIT 1
  </select>

  <select id="selectProductionOrderDetailsByGoodsIdAndPoId" resultType="com.mingyuansoftware.aifactory.model.ProductionOrderDetails">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select pod.production_order_details_id, pod.production_order_id, pod.goods_id, pod.total_task_amount,pod.sales_booking,
    pod.quantity, pod.production_instruction_id,pod.`cycle`, pod.shift, pod.`comment`,pod.status,
    IFNULL(pod.inventory_quantity,0) AS inventory_quantity,gd.parts_cd
    from production_order_details as pod
    LEFT JOIN production_order AS po ON (pod.production_order_id = po.production_order_id)
    LEFT JOIN goods AS gd ON (pod.goods_id = gd.goods_id)
    where pod.goods_id = #{goodsId} AND pod.status &lt; 3 AND pod.production_order_id > #{productionOrderId}
    ORDER BY pod.production_order_details_id ASC LIMIT 1
  </select>

</mapper>