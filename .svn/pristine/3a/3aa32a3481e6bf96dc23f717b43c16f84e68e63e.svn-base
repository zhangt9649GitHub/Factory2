<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mingyuansoftware.aifactory.mapper.StockKucunGoodsMapper" >
  <resultMap id="BaseResultMap" type="com.mingyuansoftware.aifactory.model.StockKucunGoods" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="skgid" property="skgid" jdbcType="INTEGER" />
    <result column="skg_create_datetime" property="skgCreateDatetime" jdbcType="TIMESTAMP" />
    <result column="skg_count" property="skgCount" jdbcType="DECIMAL" />
    <result column="warehouse_id" property="warehouseId" jdbcType="INTEGER" />
    <result column="skg_type" property="skgType" jdbcType="VARCHAR" />
    <result column="gid" property="gid" jdbcType="INTEGER" />
    <result column="skg_dan_jia" property="skgDanJia" jdbcType="DECIMAL" />
    <result column="skg_serial_number" property="skgSerialNumber" jdbcType="VARCHAR" />
    <result column="skg_wanglai_danwei" property="skgWanglaiDanwei" jdbcType="VARCHAR" />
    <result column="change_type" property="changeType" jdbcType="TINYINT" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from stock_kucun_goods
    where skgid = #{skgid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mingyuansoftware.aifactory.model.StockKucunGoods" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Integer" keyProperty="skgid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into stock_kucun_goods (skg_create_datetime, skg_count, warehouse_id, 
      skg_type, gid, skg_dan_jia, 
      skg_serial_number, skg_wanglai_danwei,change_type)
    values (#{skgCreateDatetime,jdbcType=TIMESTAMP}, #{skgCount,jdbcType=DECIMAL}, #{warehouseId,jdbcType=INTEGER}, 
      #{skgType,jdbcType=VARCHAR}, #{gid,jdbcType=INTEGER}, #{skgDanJia,jdbcType=DECIMAL}, 
      #{skgSerialNumber,jdbcType=VARCHAR}, #{skgWanglaiDanwei,jdbcType=VARCHAR},#{changeType,jdbcType=TINYINT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.mingyuansoftware.aifactory.model.StockKucunGoods" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update stock_kucun_goods
    set skg_create_datetime = #{skgCreateDatetime,jdbcType=TIMESTAMP},
      skg_count = #{skgCount,jdbcType=DECIMAL},
      warehouse_id = #{warehouseId,jdbcType=INTEGER},
      skg_type = #{skgType,jdbcType=VARCHAR},
      gid = #{gid,jdbcType=INTEGER},
      skg_dan_jia = #{skgDanJia,jdbcType=DECIMAL},
      skg_serial_number = #{skgSerialNumber,jdbcType=VARCHAR},
      skg_wanglai_danwei = #{skgWanglaiDanwei,jdbcType=VARCHAR},
      change_type = #{changeType,jdbcType=TINYINT}
    where skgid = #{skgid,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select skgid, skg_create_datetime, skg_count, warehouse_id, skg_type, gid, skg_dan_jia, 
    skg_serial_number, skg_wanglai_danwei,change_type
    from stock_kucun_goods
    where skgid = #{skgid,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select skgid, skg_create_datetime, skg_count, warehouse_id, skg_type, gid, skg_dan_jia, 
    skg_serial_number, skg_wanglai_danwei,change_type
    from stock_kucun_goods
  </select>

  <select id="selectStockKucunGoodsCountByWarehouseId" resultType="com.mingyuansoftware.aifactory.model.KucunGoods" >
  <!--
    WARNING - @mbggenerated
    This element is automatically generated by MyBatis Generator, do not modify.
  -->
  select gid.goodsId,goods.parts_cd,goods.goods_name,goods.unit,goods.specification,gid.skgCount,goods.average_price,
  goods.selling_price,goods.boxes_number,goods.monthly_sales_volume,goods.selling_months,goods.net_weight,
  goods.gross_weight,goods.volume,goods.months_in_stock,goods.a_price
  from (select gid as goodsId,sum(skg_count) as skgCount,warehouse_id from stock_kucun_goods where warehouse_id = #{warehouseId} group by gid) AS gid
  LEFT JOIN goods ON(goods.goods_id = gid.goodsId)
  <where>
    <if test="partsCd != null and partsCd != ''">
      AND goods.parts_cd like "%"#{partsCd}"%"
    </if>
    <if test="goodsId != null and goodsId != ''">
      AND gid.goodsId = #{goodsId}
    </if>
  </where>
</select>

  <select id="selectStockKucunGoodsByWarehouseId" resultType="com.mingyuansoftware.aifactory.model.KucunGoods" parameterType="Map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select gid.goodsId,goods.goods_number,goods.parts_cd,goods.goods_name,goods.unit,goods.specification,gid.skgCount,goods.average_price,
    goods.selling_price,goods.boxes_number,goods.monthly_sales_volume,goods.selling_months,goods.net_weight,
    goods.gross_weight,goods.volume,goods.months_in_stock, wp.wp_name
    from (select gid as goodsId,sum(skg_count) as skgCount,warehouse_id from stock_kucun_goods where warehouse_id = #{warehouseId} group by gid ) AS gid
    LEFT JOIN goods ON(goods.goods_id = gid.goodsId)
    LEFT JOIN warehouse_position AS wp ON (wp.wp_id = goods.wp_id)
    <where>
    <if test="goodsId != null and goodsId != ''">
      AND gid.goodsId = #{goodsId}
    </if>
    </where>
  </select>

  <select id="selectCountStockKucunGoodsByWarehouseId" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select COUNT(gid.goodsId)
    from (select gid as goodsId,sum(skg_count) as skgCount,warehouse_id from stock_kucun_goods where warehouse_id = #{warehouseId} group by gid ) AS gid
    LEFT JOIN goods ON(goods.goods_id = gid.goodsId)
      <where>
          <if test="partsCd != null and partsCd != ''">
              AND goods.parts_cd like "%"#{partsCd}"%"
          </if>
          <if test="goodsId != null and goodsId != ''">
              AND gid.goodsId = #{goodsId}
          </if>
      </where>
  </select>

  <select id="getStockKucunGoodsCountByGoodsId" resultType="com.mingyuansoftware.aifactory.model.KucunGoods" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select gid.goodsId,goods.parts_cd,goods.goods_name,goods.unit,goods.specification,gid.skgCount,goods.average_price,
    goods.selling_price,goods.boxes_number,goods.monthly_sales_volume,goods.selling_months,goods.net_weight,
    goods.gross_weight,goods.volume,goods.months_in_stock
    from (select gid as goodsId,sum(skg_count) as skgCount from stock_kucun_goods group by gid) AS gid
    LEFT JOIN goods ON(goods.goods_id = gid.goodsId)
    where gid.goodsId = #{goodsId}
  </select>

  <select id="getStockKucunGoodsCountByGoodsIdAndWarehouseId" resultType="com.mingyuansoftware.aifactory.model.KucunGoods" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select gid.goodsId,goods.parts_cd,goods.goods_name,goods.unit,goods.specification,IFNULL(gid.skgCount,0) AS skgCount,goods.average_price,
    goods.selling_price,goods.boxes_number,goods.monthly_sales_volume,goods.selling_months,goods.net_weight,
    goods.gross_weight,goods.volume,goods.months_in_stock
    from (select gid as goodsId,sum(skg_count) as skgCount,warehouse_id from stock_kucun_goods where warehouse_id = #{warehouseId} group by gid ) AS gid
    LEFT JOIN goods ON(goods.goods_id = gid.goodsId)
    where gid.goodsId = #{goodsId}
  </select>

  <select id="selectGoodsKucunById" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select gid,sum(skg_count) as skg_count,warehouse_id,skg_create_datetime,skg_type,skg_dan_jia,
    skg_serial_number, skg_wanglai_danwei
    from stock_kucun_goods group by gid
    having gid = #{goodsId}
  </select>

  <select id="selectGoodsKucun" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select gid,sum(skg_count) as skg_count,warehouse_id,skg_create_datetime,skg_type,skg_dan_jia,
    skg_serial_number, skg_wanglai_danwei
    from stock_kucun_goods group by gid
  </select>

  <select id="selectTjGoodsKucunInfo" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select skgid,gid,skg_count,warehouse_id,skg_create_datetime,skg_type,skg_dan_jia,
    skg_serial_number, skg_wanglai_danwei
    from stock_kucun_goods
    where gid = #{goodsId}
  </select>

  <select id="selectTjGoodsKucunNow" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select skgid,gid,SUM(skg_count) AS skg_count,warehouse_id,skg_create_datetime,skg_type,skg_dan_jia,
    skg_serial_number, skg_wanglai_danwei
    from stock_kucun_goods
    where gid = #{goodsId} and skgid &lt;= #{skgid}
  </select>

  <select id="selectInboundAndOutboundAnalysisList" resultType="com.mingyuansoftware.aifactory.model.InboundAndOutboundAnalysis" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select kc.gid AS goodsId,gd.goods_name,IFNULL(it.inventoryQuantity,0) AS inventoryQuantity,IFNULL(gd.a_price,0) AS inventoryUnitPrice,IFNULL(ob.outboundQuantity,0) AS outboundQuantity,
    IFNULL(gd.a_price,0) AS outboundUnitPrice,IFNULL(kc.skg_count,0) AS inStockQuantity,IFNULL(gd.a_price,0) AS inStockUnitPrice,kc.skg_create_datetime,gd.category
    from (select gid,SUM(skg_count) AS skg_count,skg_create_datetime from stock_kucun_goods where change_type =1 GROUP BY gid) as kc
    left join goods as gd on (kc.gid =gd.goods_id)
    left join (select gid,SUM(skg_count) AS inventoryQuantity from stock_kucun_goods WHERE skg_count >0 and  change_type =1 GROUP BY gid ) AS it ON (kc.gid = it.gid)
    left join (select gid,(SUM(skg_count)*(-1)) AS outboundQuantity from stock_kucun_goods WHERE  skg_count &lt; 0 and  change_type =1 GROUP BY gid ) as ob ON (kc.gid = ob.gid)
    <where>
      <if test="inboundAndOutboundDto.startTime!= null and inboundAndOutboundDto.startTime != ''">
        AND kc.skg_create_datetime >= #{inboundAndOutboundDto.startTime}
      </if>
      <if test="inboundAndOutboundDto.endTime != null and inboundAndOutboundDto.endTime != ''">
        AND kc.skg_create_datetime &lt;= #{inboundAndOutboundDto.endTime}
      </if>
      <if test="inboundAndOutboundDto.goodsId != null and inboundAndOutboundDto.goodsId != ''">
        AND kc.gid = #{inboundAndOutboundDto.goodsId}
      </if>
      <if test="inboundAndOutboundDto.category != null and inboundAndOutboundDto.category != ''">
        AND gd.category = #{inboundAndOutboundDto.category}
      </if>
    </where>
  </select>


  <select id="selectCountInboundAndOutboundAnalysisList" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select COUNT(kc.gid)
    from (select gid,SUM(skg_count) AS skg_count from stock_kucun_goods GROUP BY gid) as kc
    left join goods as gd on (kc.gid =gd.goods_id)
    left join (select gid,SUM(skg_count) AS inventoryQuantity from stock_kucun_goods WHERE skg_count >0 GROUP BY gid ) AS it ON (kc.gid = it.gid)
    left join (select gid,(SUM(skg_count)*(-1)) AS outboundQuantity from stock_kucun_goods WHERE  skg_count &lt; 0 GROUP BY gid ) as ob ON (kc.gid = ob.gid)
    <where>
      <if test="inboundAndOutboundDto.startTime!= null and inboundAndOutboundDto.startTime != ''">
        AND kc.skg_create_datetime >= #{inboundAndOutboundDto.startTime}
      </if>
      <if test="inboundAndOutboundDto.endTime != null and inboundAndOutboundDto.endTime != ''">
        AND kc.skg_create_datetime &lt;= #{inboundAndOutboundDto.endTime}
      </if>
      <if test="inboundAndOutboundDto.goodsName != null and inboundAndOutboundDto.goodsName != ''">
        AND gd.goods_name like "%"#{inboundAndOutboundDto.goodsName}"%"
      </if>
      <if test="inboundAndOutboundDto.category != null and inboundAndOutboundDto.category != ''">
        AND gd.category = #{inboundAndOutboundDto.category}
      </if>
    </where>
  </select>
</mapper>