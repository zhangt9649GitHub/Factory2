<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mingyuansoftware.aifactory.mapper.ProductionInstructionGoodsMapper" >
  <resultMap id="BaseResultMap" type="com.mingyuansoftware.aifactory.model.ProductionInstructionGoods" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="production_instruction_goods_id" property="productionInstructionGoodsId" jdbcType="INTEGER" />
    <result column="production_instruction_id" property="productionInstructionId" jdbcType="INTEGER" />
    <result column="goods_id" property="goodsId" jdbcType="INTEGER" />
    <result column="parts_cd" property="partsCd" jdbcType="VARCHAR" />
    <result column="product_name" property="productName" jdbcType="VARCHAR" />
    <result column="connection_no" property="connectionNo" jdbcType="VARCHAR" />
    <result column="parent_no" property="parentNo" jdbcType="VARCHAR" />
    <result column="variety" property="variety" jdbcType="VARCHAR" />
    <result column="production_schedule" property="productionSchedule" jdbcType="DECIMAL" />
    <result column="return_quantity" property="returnQuantity" jdbcType="INTEGER" />
    <result column="unit" property="unit" jdbcType="VARCHAR" />
    <result column="boxes_number" property="boxesNumber" jdbcType="INTEGER" />
    <result column="number" property="number" jdbcType="INTEGER" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="unfinished_quantity" property="unfinishedQuantity" jdbcType="DECIMAL" />
    <result column="finished_quantity" property="finishedQuantity" jdbcType="DECIMAL" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <association column="variety_value" property="goodsVariety"
                 select="com.mingyuansoftware.aifactory.mapper.GoodsVarietyMapper.selectByPrimaryKey"></association>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from production_instruction_goods
    where production_instruction_goods_id = #{productionInstructionGoodsId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mingyuansoftware.aifactory.model.ProductionInstructionGoods" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Integer" keyProperty="productionInstructionGoodsId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into production_instruction_goods (production_instruction_id, goods_id, 
      parts_cd, product_name, connection_no, 
      parent_no, variety_value, production_schedule,
      return_quantity, unit, boxes_number, 
      `number`, `comment`,unfinished_quantity,finished_quantity)
    values (#{productionInstructionId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, 
      #{partsCd,jdbcType=VARCHAR}, #{productName,jdbcType=VARCHAR}, #{connectionNo,jdbcType=VARCHAR}, 
      #{parentNo,jdbcType=VARCHAR}, #{varietyValue,jdbcType=INTEGER}, #{productionSchedule,jdbcType=DECIMAL},
      #{returnQuantity,jdbcType=INTEGER}, #{unit,jdbcType=VARCHAR}, #{boxesNumber,jdbcType=INTEGER}, 
      #{number,jdbcType=INTEGER}, #{comment,jdbcType=VARCHAR},#{unfinishedQuantity,jdbcType=DECIMAL},#{finishedQuantity,jdbcType=DECIMAL})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.mingyuansoftware.aifactory.model.ProductionInstructionGoods" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update production_instruction_goods
    set production_instruction_id = #{productionInstructionId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      parts_cd = #{partsCd,jdbcType=VARCHAR},
      product_name = #{productName,jdbcType=VARCHAR},
      connection_no = #{connectionNo,jdbcType=VARCHAR},
      parent_no = #{parentNo,jdbcType=VARCHAR},
      variety_value =  #{varietyValue,jdbcType=INTEGER},
      production_schedule = #{productionSchedule,jdbcType=DECIMAL},
      return_quantity = #{returnQuantity,jdbcType=INTEGER},
      unit = #{unit,jdbcType=VARCHAR},
      boxes_number = #{boxesNumber,jdbcType=INTEGER},
      `number` = #{number,jdbcType=INTEGER},
      `comment` = #{comment,jdbcType=VARCHAR},
    unfinished_quantity = #{unfinishedQuantity,jdbcType=DECIMAL},
    finished_quantity = #{finishedQuantity,jdbcType=DECIMAL},
    state = #{state,jdbcType=TINYINT}
    where production_instruction_goods_id = #{productionInstructionGoodsId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select production_instruction_goods_id, production_instruction_id, goods_id, parts_cd, 
    product_name, connection_no, parent_no, variety_value, production_schedule, return_quantity,
    unit, boxes_number, `number`, `comment`,unfinished_quantity,finished_quantity
    from production_instruction_goods
    where production_instruction_goods_id = #{productionInstructionGoodsId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select production_instruction_goods_id, production_instruction_id, goods_id, parts_cd, 
    product_name, connection_no, parent_no, variety_value, production_schedule, return_quantity,
    unit, boxes_number, `number`, `comment`,unfinished_quantity,finished_quantity
    from production_instruction_goods
  </select>

  <select id="selectProductionInstructionDetailById" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select pig.production_instruction_goods_id, pig.production_instruction_id, pig.goods_id, pig.parts_cd,
    pig.product_name, pig.connection_no, pig.parent_no, pig.variety_value, pig.production_schedule, pig.return_quantity,
    pig.unit, pig.boxes_number, pig.`number`, pig.`comment`,pig.unfinished_quantity,pig.finished_quantity,pi.serial_number,gv.cn_name AS variety
    from production_instruction_goods as pig
    LEFT JOIN production_instruction as pi on (pig.production_instruction_id = pi.production_instruction_id)
    LEFT JOIN goods_variety AS gv ON (pig.variety_value = gv.variety_value)
    where pig.production_instruction_id = #{productionInstructionId}
  </select>

  <select id="selectProductionInstructionGoodsList" resultType="com.mingyuansoftware.aifactory.model.dto.ProductionInstructionGoodsDto" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select pig.production_instruction_goods_id, pig.production_instruction_id, pig.goods_id, pig.parts_cd,
    pig.product_name, pig.connection_no, pig.parent_no,gv.cn_name as variety, pig.production_schedule, pig.return_quantity,
    pig.unit, pig.boxes_number, pig.`number`, pig.`comment`,pi.serial_number,pig.state
    from production_instruction_goods AS pig
    LEFT JOIN production_instruction AS pi ON (pig.production_instruction_id = pi.production_instruction_id)
    LEFT JOIN goods_variety AS gv ON (pig.variety_value = gv.variety_value)
    <where>
      <if test="productionInstructionGoodsDto.serialNumber != null and productionInstructionGoodsDto.serialNumber != ''">
        AND pi.serial_number like "%"#{productionInstructionGoodsDto.serialNumber}"%"
      </if>
      <if test="productionInstructionGoodsDto.productName != null and productionInstructionGoodsDto.productName != ''">
        AND pig.product_name like "%"#{productionInstructionGoodsDto.productName}"%"
      </if>
      <if test="productionInstructionGoodsDto.partsCd != null and productionInstructionGoodsDto.partsCd  != ''">
        AND pig.parts_cd like "%"#{productionInstructionGoodsDto.partsCd}"%"
      </if>
      <if test="productionInstructionGoodsDto.connectionNo != null and productionInstructionGoodsDto.connectionNo != ''">
        AND pig.connection_no like "%"#{productionInstructionGoodsDto.connectionNo}"%"
      </if>
      <if test="productionInstructionGoodsDto.parentNo != null and productionInstructionGoodsDto.parentNo  != ''">
        AND pig.parent_no like "%"#{productionInstructionGoodsDto.parentNo}"%"
      </if>
      <if test="productionInstructionGoodsDto.variety != null and productionInstructionGoodsDto.variety  != ''">
        AND gv.cn_name like "%"#{productionInstructionGoodsDto.variety}"%"
      </if>
      <if test="productionInstructionGoodsDto.productionSchedule != null and productionInstructionGoodsDto.productionSchedule  != ''  or productionInstructionGoodsDto.productionSchedule  == '0'.toString()">
        AND pig.production_schedule  = #{productionInstructionGoodsDto.productionSchedule}
      </if>
      <if test="productionInstructionGoodsDto.unit != null and productionInstructionGoodsDto.unit  != ''">
        AND pig.unit = #{productionInstructionGoodsDto.unit}
      </if>
      <if test="productionInstructionGoodsDto.state != null and productionInstructionGoodsDto.state  != ''">
        AND pig.state = #{productionInstructionGoodsDto.state}
      </if>
    </where>
    ORDER BY pig.production_instruction_goods_id DESC
  </select>

  <select id="selectCountProductionInstructionGoods" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select COUNT(pig.production_instruction_goods_id)
    from production_instruction_goods AS pig
    LEFT JOIN production_instruction AS pi ON (pig.production_instruction_id = pi.production_instruction_id)
    LEFT JOIN goods_variety AS gv ON (pig.variety_value = gv.variety_value)
    <where>
      <if test="productionInstructionGoodsDto.serialNumber != null and productionInstructionGoodsDto.serialNumber != ''">
        AND pi.serial_number like "%"#{productionInstructionGoodsDto.serialNumber}"%"
      </if>
      <if test="productionInstructionGoodsDto.productName != null and productionInstructionGoodsDto.productName != ''">
        AND pig.product_name like "%"#{productionInstructionGoodsDto.productName}"%"
      </if>
      <if test="productionInstructionGoodsDto.partsCd != null and productionInstructionGoodsDto.partsCd  != ''">
        AND pig.parts_cd like "%"#{productionInstructionGoodsDto.partsCd}"%"
      </if>
      <if test="productionInstructionGoodsDto.connectionNo != null and productionInstructionGoodsDto.connectionNo != ''">
        AND pig.connection_no like "%"#{productionInstructionGoodsDto.connectionNo}"%"
      </if>
      <if test="productionInstructionGoodsDto.parentNo != null and productionInstructionGoodsDto.parentNo  != ''">
        AND pig.parent_no like "%"#{productionInstructionGoodsDto.parentNo}"%"
      </if>
      <if test="productionInstructionGoodsDto.variety != null and productionInstructionGoodsDto.variety  != ''">
        AND gv.cn_name like "%"#{productionInstructionGoodsDto.variety}"%"
      </if>
      <if test="productionInstructionGoodsDto.productionSchedule != null and productionInstructionGoodsDto.productionSchedule  != '' or productionInstructionGoodsDto.productionSchedule  == '0'.toString()">
        AND pig.production_schedule  = #{productionInstructionGoodsDto.productionSchedule}
      </if>
      <if test="productionInstructionGoodsDto.unit != null and productionInstructionGoodsDto.unit  != ''">
        AND pig.unit = #{productionInstructionGoodsDto.unit}
      </if>
      <if test="productionInstructionGoodsDto.state != null and productionInstructionGoodsDto.state  != ''">
        AND pig.state = #{productionInstructionGoodsDto.state}
      </if>
    </where>
    ORDER BY pig.production_instruction_goods_id DESC
  </select>


  <select id="selectProductionInstructionGoods" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select production_instruction_goods_id, production_instruction_id, goods_id, parts_cd,
    product_name, connection_no, parent_no, variety_value, production_schedule, return_quantity,
    unit, boxes_number, `number`, `comment`,IFNULL(unfinished_quantity,0) AS unfinished_quantity,
    IFNULL(finished_quantity,0) AS finished_quantity,state
    from production_instruction_goods
    WHERE production_instruction_id = #{productionInstructionId} AND goods_id = #{goodsId}
  </select>
  <select id="selectValueEstimationList" parameterType="com.mingyuansoftware.aifactory.model.dto.ValueEstimationDto" resultType="com.mingyuansoftware.aifactory.model.dto.ValueEstimationDto" >
    select pig.production_instruction_goods_id,
    pig.production_instruction_id, pi.serial_number,
    pig.goods_id, gd.specification, gd.a_price, pig.parts_cd, pig.product_name, pig.unit,
    pig.unfinished_quantity, IFNULL(gd.a_price*pig.unfinished_quantity,0) as amount
    from production_instruction_goods as pig
    left join goods as gd on (pig.goods_id = gd.goods_id)
    left join production_instruction as pi on (pig.production_instruction_id = pi.production_instruction_id)
    <where>
      <if test="valueEstimationDto.partsCd != null and valueEstimationDto.partsCd != ''">
        and pig.parts_cd like "%"#{valueEstimationDto.partsCd}"%"
      </if>
      <if test="valueEstimationDto.productName != null and valueEstimationDto.productName != ''">
        and pig.product_name like "%"#{valueEstimationDto.productName}"%"
      </if>
      <if test="valueEstimationDto.specification != null and valueEstimationDto.specification != ''">
        and gd.specification like "%"#{valueEstimationDto.specification}"%"
      </if>
      <if test="valueEstimationDto.unit != null and valueEstimationDto.unit != ''">
        and pig.unit like "%"#{valueEstimationDto.unit}"%"
      </if>
      <if test="valueEstimationDto.serialNumber != null and valueEstimationDto.serialNumber != ''">
        and pi.serial_number like "%"#{valueEstimationDto.serialNumber}"%"
      </if>
      <if test="valueEstimationDto.unfinishedQuantity != null and valueEstimationDto.unfinishedQuantity  != '' or valueEstimationDto.unfinishedQuantity  == '0'.toString()">
        and pig.unfinished_quantity  = #{valueEstimationDto.unfinishedQuantity}
      </if>
      <if test="valueEstimationDto.aPrice != null and valueEstimationDto.aPrice  != '' or valueEstimationDto.aPrice  == '0'.toString()">
        and gd.a_price  = #{valueEstimationDto.aPrice}
      </if>
      and pig.unfinished_quantity > 0
    </where>
  </select>
  <select id="selectValueEstimationCount" parameterType="com.mingyuansoftware.aifactory.model.dto.ValueEstimationDto" resultType="java.lang.Integer" >
    select count(pig.production_instruction_goods_id)
    from production_instruction_goods as pig
    left join goods as gd on (pig.goods_id = gd.goods_id)
    left join production_instruction as pi on (pig.production_instruction_id = pi.production_instruction_id)
    <where>
      <if test="valueEstimationDto.partsCd != null and valueEstimationDto.partsCd != ''">
        and pig.parts_cd like "%"#{valueEstimationDto.partsCd}"%"
      </if>
      <if test="valueEstimationDto.productName != null and valueEstimationDto.productName != ''">
        and pig.product_name like "%"#{valueEstimationDto.productName}"%"
      </if>
      <if test="valueEstimationDto.specification != null and valueEstimationDto.specification != ''">
        and gd.specification like "%"#{valueEstimationDto.specification}"%"
      </if>
      <if test="valueEstimationDto.unit != null and valueEstimationDto.unit != ''">
        and pig.unit like "%"#{valueEstimationDto.unit}"%"
      </if>
      <if test="valueEstimationDto.serialNumber != null and valueEstimationDto.serialNumber != ''">
        and pi.serial_number like "%"#{valueEstimationDto.serialNumber}"%"
      </if>
      <if test="valueEstimationDto.unfinishedQuantity != null and valueEstimationDto.unfinishedQuantity  != '' or valueEstimationDto.unfinishedQuantity  == '0'.toString()">
        and pig.unfinished_quantity  = #{valueEstimationDto.unfinishedQuantity}
      </if>
      <if test="valueEstimationDto.aPrice != null and valueEstimationDto.aPrice  != '' or valueEstimationDto.aPrice  == '0'.toString()">
        and gd.a_price  = #{valueEstimationDto.aPrice}
      </if>
      and pig.unfinished_quantity > 0
    </where>
  </select>


  <select id="selectProductionProcessList" resultType="com.mingyuansoftware.aifactory.model.ProductionProcess" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select pig.goods_id,pig.production_schedule as totalQuantity,pig.state,pi.serial_number,pi.create_time,gd.category
    from production_instruction_goods AS pig
    LEFT JOIN production_instruction AS pi ON(pig.production_instruction_id =pi.production_instruction_id)
    LEFT JOIN goods AS gd ON (pig.goods_id = gd.goods_id)
    WHERE pig.state &lt; 3 and pig.production_schedule > 0
    ORDER BY pi.serial_number ASC
  </select>

  <select id="selectProductionScheduleAnalysisList" resultType="com.mingyuansoftware.aifactory.model.ProductionScheduleAnalysis" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select distinct(pig.goods_id),gd.goods_name,gd.parts_cd,gd.category,IFNULL(gd.monthly_sales_volume,0) as averageMonthlyVendor,IFNULL(gd.months_in_stock,0) as monthsInStock,
    IFNULL(gd.minimum_stock,0) as minimumStock,IFNULL(gid.skgCount,0) as inventory
    from production_instruction_goods AS pig
    LEFT JOIN goods AS gd ON (pig.goods_id = gd.goods_id)
    left join (select gid as goodsId,sum(skg_count) as skgCount from stock_kucun_goods group by gid) AS gid ON (pig.goods_id =gid.goodsId)
    WHERE pig.state &lt; 3 and pig.production_schedule > 0
    <if test="productionScheduleAnalysisDto.goodsName != null and productionScheduleAnalysisDto.goodsName != ''">
      and gd.goods_name like "%"#{productionScheduleAnalysisDto.goodsName}"%"
    </if>
    <if test="productionScheduleAnalysisDto.category != null and productionScheduleAnalysisDto.category != ''">
      and gd.category = #{productionScheduleAnalysisDto.category}
    </if>
  </select>


  <select id="selectProductionProcessRate" resultType="com.mingyuansoftware.aifactory.model.ProductionProcessRate" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select pig.goods_id,pig.production_schedule as totalQuantity,gd.category,pig.state,
    IFNULL(pig.return_quantity,0) AS return_quantity, IFNULL(pig.finished_quantity,0) as ProductionComplete,
    IFNULL(pod.PrepareProduction,0) AS PrepareProduction,IFNULL(sod.SalesShipment,0) AS SalesShipment,bf.bom_id
    from production_instruction_goods AS pig
    LEFT JOIN production_instruction AS pi ON(pig.production_instruction_id =pi.production_instruction_id)
    LEFT JOIN (select goods_id,production_instruction_id,(sum(IFNULL(quantity,0) - IFNULL(inventory_quantity,0)))as PrepareProduction from production_order_details GROUP BY goods_id,production_instruction_id) AS pod ON(pod.production_instruction_id = pig.production_instruction_id and pig.goods_id =pod.goods_id)
    LEFT JOIN (select goods_id,lot_number,(sum(IFNULL(out_quantity,0)-IFNULL(return_amount,0))) as SalesShipment from sales_order_details GROUP BY goods_id,lot_number) AS sod ON (sod.lot_number = pi.serial_number and pig.goods_id =sod.goods_id)
    LEFT JOIN goods AS gd ON (pig.goods_id = gd.goods_id)
    LEFT JOIN bom_form as bf ON (bf.good_id =pig.goods_id)
    WHERE pig.goods_id = #{goodsId} AND pi.serial_number = #{serialNumber}
  </select>

  <select id="selectProductionCostingList" resultType="com.mingyuansoftware.aifactory.model.ProductionCosting" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    SELECT pig.parts_cd,pig.product_name AS goodsName,gd.specification,gd.unit,pi.serial_number,pi.create_time AS documentTime,IFNULL(P.acquisitionCost,0) AS acquisitionCost
    FROM production_instruction_goods AS pig
    LEFT JOIN goods AS gd ON (pig.goods_id =gd.goods_id)
    LEFT JOIN production_instruction as pi ON (pig.production_instruction_id =pi.production_instruction_id)
    LEFT JOIN (SELECT
    pid.production_instruction_goods_id,
    (sum(IFNULL(pid.production_schedule,0)*IFNULL(gd.a_price,0))) AS acquisitionCost
    FROM
    production_instruction_detail AS pid
    LEFT JOIN goods AS gd ON (pid.goods_id = gd.goods_id)
    GROUP BY production_instruction_goods_id) AS P ON (pig.production_instruction_goods_id =P.production_instruction_goods_id)
    WHERE pi.state = 3
    <if test="productionCosting.partsCd != null and productionCosting.partsCd != ''">
      and pig.parts_cd like "%"#{productionCosting.partsCd}"%"
    </if>
    <if test="productionCosting.goodsName != null and productionCosting.goodsName != ''">
      and pig.product_name like "%"#{productionCosting.goodsName}"%"
    </if>
    <if test="productionCosting.specification != null and productionCosting.specification != ''">
      and gd.specification like "%"#{productionCosting.specification}"%"
    </if>
    <if test="productionCosting.unit != null and productionCosting.unit != ''">
      and gd.unit like "%"#{productionCosting.unit}"%"
    </if>
    <if test="productionCosting.serialNumber != null and productionCosting.serialNumber != ''">
      and pi.serial_number like "%"#{productionCosting.serialNumber}"%"
    </if>
    <if test="productionCosting.documentTime != null and productionCosting.documentTime != ''">
      and pi.create_time like "%"#{productionCosting.documentTime}"%"
    </if>
    <if test="productionCosting.acquisitionCost != null and productionCosting.acquisitionCost != '' or productionCosting.acquisitionCost  == '0'.toString()">
      and P.acquisitionCost = #{productionCosting.acquisitionCost}
    </if>
  </select>

  <select id="selectJPExportsGoodsList" resultType="com.mingyuansoftware.aifactory.model.KucunGoods" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select pig.goods_id, gd.parts_cd, gd.goods_name,gv.cn_name as variety, gd.unit, gd.specification, gd.weight, gd.unit_price,IFNULL(purchase_order_quantity,0) AS purchase_order_quantity,
    IFNULL(gd.a_price,0) AS a_price, gd.b_price,IFNULL(gd.selling_price,0) AS selling_price, gd.wholesale_prices, gd.minimum_stock,
    gd.procurement_reserve_stock_index, gd.japan_stock, gd.tj_stock, gd.purchase_price,
    gd.salary_price, gd.uf_id,gd.create_time, gd.update_time,IFNULL(gd.average_price,0) AS average_price,gd.supplier_id,IFNULL(gd.boxes_number,0) AS boxes_number,
    gd.bundle_number,IFNULL(gd.monthly_sales_volume,0) AS monthly_sales_volume,IFNULL(gd.selling_months,0) AS selling_months,IFNULL(gd.net_weight,0) AS net_weight,
    IFNULL(gd.gross_weight,0) AS gross_weight,IFNULL(gd.volume,0) AS volume,gd.months_in_stock,gd.category,gd.wp_id,pi.serial_number as lotNumber
    from production_instruction_goods AS pig
    LEFT JOIN goods AS gd ON (gd.goods_id = pig.goods_id)
    LEFT JOIN goods_variety AS gv ON (gd.variety_value = gv.variety_value)
    LEFT JOIN production_instruction AS pi ON (pig.production_instruction_id = pi.production_instruction_id)
    <where>
      pig.state = 3
      <if test="partsCd != null and partsCd != ''">
        AND gd.parts_cd like "%"#{partsCd}"%"
      </if>
      <if test="goodsId != null and goodsId != ''">
        AND pig.goods_id = #{goodsId}
      </if>
      <if test="goodsName != null and goodsName != ''">
        AND gd.goods_name like "%"#{goodsName}"%"
      </if>
    </where>
  </select>

  <select id="selectJPExportsGoodsCount" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(pig.goods_id)
    from production_instruction_goods AS pig
    LEFT JOIN goods AS gd ON (gd.goods_id = pig.goods_id)
    LEFT JOIN goods_variety AS gv ON (gd.variety_value = gv.variety_value)
    LEFT JOIN production_instruction AS pi ON (pig.production_instruction_id = pi.production_instruction_id)
    <where>
      pig.state = 3
      <if test="partsCd != null and partsCd != ''">
        AND gd.parts_cd like "%"#{partsCd}"%"
      </if>
      <if test="goodsId != null and goodsId != ''">
        AND pig.goods_id = #{goodsId}
      </if>
      <if test="goodsName != null and goodsName != ''">
        AND gd.goods_name like "%"#{goodsName}"%"
      </if>
    </where>
  </select>
  <select id="selectProInsGoodsInfoByNDProid" resultMap="BaseResultMap" >
    select pig.production_instruction_goods_id, pig.production_instruction_id, pig.goods_id,
		pig.production_schedule, pig.unfinished_quantity
		from production_instruction_goods as pig
		where pig.production_instruction_id = (select production_instruction_id from production_instruction	where serial_number = #{productionInstructionId})
  </select>
</mapper>