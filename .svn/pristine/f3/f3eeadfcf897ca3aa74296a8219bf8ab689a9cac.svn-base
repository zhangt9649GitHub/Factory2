<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mingyuansoftware.aifactory.mapper.ProductionOrderMapper" >
  <resultMap id="BaseResultMap" type="com.mingyuansoftware.aifactory.model.ProductionOrder" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="production_order_id" property="productionOrderId" jdbcType="INTEGER" />
    <result column="production_order_number" property="productionOrderNumber" jdbcType="VARCHAR" />
    <result column="is_create_picking" property="isCreatePicking" jdbcType="TINYINT" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="is_delete" property="isDelete" jdbcType="TINYINT" />
    <result column="add_time" property="addTime" jdbcType="DATE" />
    <association column="staff_id" property="staff"
                 select="com.mingyuansoftware.aifactory.mapper.StaffMapper.selectByPrimaryKey"></association>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from production_order
    where production_order_id = #{productionOrderId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mingyuansoftware.aifactory.model.ProductionOrder" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Integer" keyProperty="productionOrderId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into production_order (production_order_number, staff_id, is_create_picking, 
      `state`, create_time, update_time, 
      `comment`, is_delete,add_time)
    values (#{productionOrderNumber,jdbcType=VARCHAR}, #{staffId,jdbcType=INTEGER}, #{isCreatePicking,jdbcType=TINYINT}, 
      #{state,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{comment,jdbcType=VARCHAR}, #{isDelete,jdbcType=TINYINT},#{addTime,jdbcType=DATE})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.mingyuansoftware.aifactory.model.ProductionOrder" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update production_order
    set production_order_number = #{productionOrderNumber,jdbcType=VARCHAR},
      staff_id = #{staffId,jdbcType=INTEGER},
      is_create_picking = #{isCreatePicking,jdbcType=TINYINT},
      `state` = #{state,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      `comment` = #{comment,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=TINYINT},
      add_time = #{addTime,jdbcType=DATE}
    where production_order_id = #{productionOrderId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select production_order_id, production_order_number, staff_id, is_create_picking, 
    `state`, create_time, update_time, `comment`, is_delete,add_time
    from production_order
    where production_order_id = #{productionOrderId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select production_order_id, production_order_number, staff_id, is_create_picking, 
    `state`, create_time, update_time, `comment`, is_delete,add_time
    from production_order
  </select>

  <select id="selectProductionOrderList" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select po.production_order_id, po.production_order_number, po.staff_id, po.is_create_picking,
    po.`state`, po.create_time, po.update_time, po.`comment`, po.is_delete,po.add_time,sf.name
    from production_order as po
    LEFT JOIN staff AS sf ON (po.staff_id =sf.staff_id)
    <where>
      <if test="productionOrderDto.productionOrderNumber != null and productionOrderDto.productionOrderNumber != ''">
        AND po.production_order_number like "%"#{productionOrderDto.productionOrderNumber}"%"
      </if>
      <if test="productionOrderDto.addTime != null and productionOrderDto.addTime != ''">
        AND po.add_time like "%"#{productionOrderDto.addTime}"%"
      </if>
      <if test="productionOrderDto.name != null and productionOrderDto.name != ''">
        AND sf.name like "%"#{productionOrderDto.name}"%"
      </if>
      <if test="productionOrderDto.state != null and productionOrderDto.state != ''">
        AND po.`state` = #{productionOrderDto.state}
      </if>
      AND po.is_delete = 0
    </where>
    ORDER BY po.production_order_id DESC
  </select>

  <select id="selectCount" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select COUNT(production_order_id)
    from production_order as po
    LEFT JOIN staff AS sf ON (po.staff_id =sf.staff_id)
    <where>
      <if test="productionOrderDto.productionOrderNumber != null and productionOrderDto.productionOrderNumber != ''">
        AND po.production_order_number like "%"#{productionOrderDto.productionOrderNumber}"%"
      </if>
      <if test="productionOrderDto.addTime != null and productionOrderDto.addTime != ''">
        AND po.add_time like "%"#{productionOrderDto.addTime}"%"
      </if>
      <if test="productionOrderDto.name != null and productionOrderDto.name != ''">
        AND sf.name like "%"#{productionOrderDto.name}"%"
      </if>
      <if test="productionOrderDto.state != null and productionOrderDto.state != ''">
        AND po.`state` = #{productionOrderDto.state}
      </if>
      AND po.is_delete = 0
    </where>
    ORDER BY po.production_order_id DESC
  </select>

    <update id="updateProductionOrderById">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update production_order
        set
        is_delete = 1,
        update_time = now()
        where production_order_id = #{productionOrderId,jdbcType=INTEGER}
    </update>

  <select id="selectPdaProductionEntryTaskList" resultType="com.mingyuansoftware.aifactory.model.PDAProductionEntryTask" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select po.production_order_id, po.production_order_number
    from production_order AS po
    WHERE po.state &lt; 3 and po.is_delete =0
  </select>

  <select id="selectPdaProductionEntryListTaskCount" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select COUNT(po.production_order_id)
    from production_order AS po
    LEFT JOIN (select pod.production_order_id,pi.serial_number FROM production_order_details AS pod LEFT JOIN production_instruction as pi on (pod.production_instruction_id = pi.production_instruction_id) GROUP BY pod.production_order_id) AS SN
    ON (SN.production_order_id =po.production_order_id)
    WHERE po.state &lt; 3 and po.is_delete =0
  </select>

  <select id="selectProductionOrderInfoList" resultType="com.mingyuansoftware.aifactory.model.ProductionOrderInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select po.production_order_id, po.production_order_number, po.staff_id, po.is_create_picking,
    po.`state`, po.create_time, po.update_time, po.`comment`, po.is_delete,po.add_time,sf.name,SN.serial_number
    from production_order as po
    LEFT JOIN staff AS sf ON (po.staff_id =sf.staff_id)
    LEFT JOIN (select pod.production_order_id,pi.serial_number FROM production_order_details AS pod LEFT JOIN production_instruction as pi on (pod.production_instruction_id = pi.production_instruction_id) GROUP BY pod.production_order_id) AS SN
    ON (SN.production_order_id =po.production_order_id)
    where po.is_delete = 0
    ORDER BY po.production_order_id DESC
  </select>

  <select id="selectCountProductionOrderInfoList" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select COUNT(po.production_order_id)
    from production_order as po
    LEFT JOIN staff AS sf ON (po.staff_id =sf.staff_id)
    LEFT JOIN (select pod.production_order_id,pi.serial_number FROM production_order_details AS pod LEFT JOIN production_instruction as pi on (pod.production_instruction_id = pi.production_instruction_id) GROUP BY pod.production_order_id) AS SN
    ON (SN.production_order_id =po.production_order_id)
    where po.is_delete = 0
    ORDER BY po.production_order_id DESC
  </select>

  <update id="updateStateById">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update production_order
    set
    state = #{state},
    update_time = now()
    where production_order_id = #{productionOrderId,jdbcType=INTEGER}
  </update>

</mapper>