<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mingyuansoftware.aifactory.mapper.PickingDetailsMapper" >
  <resultMap id="BaseResultMap" type="com.mingyuansoftware.aifactory.model.PickingDetails" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="picking_details_id" property="pickingDetailsId" jdbcType="INTEGER" />
    <result column="picking_id" property="pickingId" jdbcType="INTEGER" />
    <result column="quantity" property="quantity" jdbcType="DECIMAL" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <association column="goods_id" property="goods"
                 select="com.mingyuansoftware.aifactory.mapper.GoodsMapper.selectByPrimaryKey"></association>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from picking_details
    where picking_details_id = #{pickingDetailsId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mingyuansoftware.aifactory.model.PickingDetails" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Integer" keyProperty="pickingDetailsId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into picking_details (picking_id, goods_id, quantity, 
      `comment`)
    values (#{pickingId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{quantity,jdbcType=DECIMAL},
      #{comment,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.mingyuansoftware.aifactory.model.PickingDetails" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update picking_details
    set picking_id = #{pickingId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      quantity = #{quantity,jdbcType=DECIMAL},
      `comment` = #{comment,jdbcType=VARCHAR}
    where picking_details_id = #{pickingDetailsId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select picking_details_id, picking_id, goods_id, quantity, `comment`
    from picking_details
    where picking_details_id = #{pickingDetailsId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select picking_details_id, picking_id, goods_id, quantity, `comment`
    from picking_details
  </select>

  <select id="selectPickingDetailById" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select picking_details_id, picking_id, goods_id, quantity,`comment`,status
    from picking_details
    where picking_id = #{pickingId}
  </select>

  <delete id="deleteByPickingId" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from picking_details
    where picking_id = #{pickingId}
  </delete>

  <select id="selectPickingDetailsList" resultType="com.mingyuansoftware.aifactory.model.dto.PickingDetailsDto" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select pd.picking_details_id,IFNULL(pd.quantity,0) as quantity,gd.parts_cd,gd.goods_name,gd.specification,pk.picking_number,
    pk.lot_number,pk.add_time,sf.name,wh.warehouse_name as intoWarehouseName,wh1.warehouse_name as outWarehouseName
    from picking_details AS pd
    LEFT JOIN goods AS gd ON (pd.goods_id = gd.goods_id)
    LEFT JOIN picking AS pk ON (pd.picking_id= pk.picking_id)
    LEFT JOIN staff as sf ON (sf.staff_id = pk.picking_staff_id)
    LEFT JOIN warehouse as wh ON (wh.warehouse_id = pk.into_warehouse_id)
    LEFT JOIN warehouse as wh1 ON (wh1.warehouse_id = pk.out_warehouse_id)
    <where>
      <if test="pickingDetailsDto.partsCd != null and pickingDetailsDto.partsCd != ''">
        AND gd.parts_cd like "%"#{pickingDetailsDto.partsCd}"%"
      </if>
      <if test="pickingDetailsDto.goodsName != null and pickingDetailsDto.goodsName != ''">
        AND gd.goods_name like "%"#{pickingDetailsDto.goodsName}"%"
      </if>
      <if test="pickingDetailsDto.specification != null and pickingDetailsDto.specification != ''">
        AND gd.specification like "%"#{pickingDetailsDto.specification}"%"
      </if>
      <if test="pickingDetailsDto.quantity != null and pickingDetailsDto.quantity != '' or pickingDetailsDto.quantity  == '0'.toString()">
        AND  pd.quantity = #{pickingDetailsDto.quantity}
      </if>
      <if test="pickingDetailsDto.name != null and pickingDetailsDto.name != ''">
        AND sf.name like "%"#{pickingDetailsDto.name}"%"
      </if>
      <if test="pickingDetailsDto.outWarehouseName != null and pickingDetailsDto.outWarehouseName != ''">
        AND  wh1.warehouse_name like "%"#{pickingDetailsDto.outWarehouseName}"%"
      </if>
      <if test="pickingDetailsDto.intoWarehouseName != null and pickingDetailsDto.intoWarehouseName != ''">
        AND  wh.warehouse_name like "%"#{pickingDetailsDto.intoWarehouseName}"%"
      </if>
      <if test="pickingDetailsDto.addTime != null and pickingDetailsDto.addTime != ''">
        AND pk.add_time like "%"#{pickingDetailsDto.addTime}"%"
      </if>
      <if test="pickingDetailsDto.pickingNumber != null and pickingDetailsDto.pickingNumber != ''">
        AND pk.picking_number like "%"#{pickingDetailsDto.pickingNumber}"%"
      </if>
      <if test="pickingDetailsDto.lotNumber != null and pickingDetailsDto.lotNumber != ''">
        AND pk.lot_number like "%"#{pickingDetailsDto.lotNumber}"%"
      </if>
      AND pk.is_delete = 0
    </where>
    ORDER BY pd.picking_details_id DESC
  </select>

  <select id="selectCountPickingDetails" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select COUNT(pd.picking_details_id)
    from picking_details AS pd
    LEFT JOIN goods AS gd ON (pd.goods_id = gd.goods_id)
    LEFT JOIN picking AS pk ON (pd.picking_id= pk.picking_id)
    LEFT JOIN staff as sf ON (sf.staff_id = pk.picking_staff_id)
    LEFT JOIN warehouse as wh ON (wh.warehouse_id = pk.into_warehouse_id)
    LEFT JOIN warehouse as wh1 ON (wh1.warehouse_id = pk.out_warehouse_id)
    <where>
      <if test="pickingDetailsDto.partsCd != null and pickingDetailsDto.partsCd != ''">
        AND gd.parts_cd like "%"#{pickingDetailsDto.partsCd}"%"
      </if>
      <if test="pickingDetailsDto.goodsName != null and pickingDetailsDto.goodsName != ''">
        AND gd.goods_name like "%"#{pickingDetailsDto.goodsName}"%"
      </if>
      <if test="pickingDetailsDto.specification != null and pickingDetailsDto.specification != ''">
        AND gd.specification like "%"#{pickingDetailsDto.specification}"%"
      </if>
      <if test="pickingDetailsDto.quantity != null and pickingDetailsDto.quantity != '' or pickingDetailsDto.quantity  == '0'.toString()">
        AND  pd.quantity = #{pickingDetailsDto.quantity}
      </if>
      <if test="pickingDetailsDto.name != null and pickingDetailsDto.name != ''">
        AND sf.name like "%"#{pickingDetailsDto.name}"%"
      </if>
      <if test="pickingDetailsDto.outWarehouseName != null and pickingDetailsDto.outWarehouseName != ''">
        AND  wh1.warehouse_name like "%"#{pickingDetailsDto.outWarehouseName}"%"
      </if>
      <if test="pickingDetailsDto.intoWarehouseName != null and pickingDetailsDto.intoWarehouseName != ''">
        AND  wh.warehouse_name like "%"#{pickingDetailsDto.intoWarehouseName}"%"
      </if>
      <if test="pickingDetailsDto.addTime != null and pickingDetailsDto.addTime != ''">
        AND pk.add_time like "%"#{pickingDetailsDto.addTime}"%"
      </if>
      <if test="pickingDetailsDto.pickingNumber != null and pickingDetailsDto.pickingNumber != ''">
        AND pk.picking_number like "%"#{pickingDetailsDto.pickingNumber}"%"
      </if>
      <if test="pickingDetailsDto.lotNumber != null and pickingDetailsDto.lotNumber != ''">
        AND pk.lot_number like "%"#{pickingDetailsDto.lotNumber}"%"
      </if>
      AND pk.is_delete = 0
    </where>
    ORDER BY pd.picking_details_id DESC
  </select>

  <select id="selectPdaPickingGoodsList" resultType="com.mingyuansoftware.aifactory.model.PickingGoods" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select pd.picking_details_id, pd.picking_id, pd.goods_id, pd.quantity,pd.`comment`,gd.parts_cd,gd.goods_name,
    gd.specification,wp.wp_name
    from picking_details as pd
    LEFT JOIN goods AS gd ON (pd.goods_id =gd.goods_id)
    LEFT JOIN warehouse_position AS wp ON (gd.wp_id =wp.wp_id)
    where picking_id = #{pickingId} and pd.status = 1
  </select>


  <select id="selectPdaPickingGoodsListCount" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select COUNT(pd.picking_details_id)
    from picking_details as pd
    LEFT JOIN goods AS gd ON (pd.goods_id =gd.goods_id)
    LEFT JOIN warehouse_position AS wp ON (gd.wp_id =wp.wp_id)
    where picking_id = #{pickingId} and pd.status = 1
  </select>

  <select id="selectGoodsInfoByGoodsNumber" resultType="com.mingyuansoftware.aifactory.model.PickingDetails" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select pd.picking_details_id, pd.picking_id, pd.goods_id, IFNULL(pd.quantity,0) AS quantity,pd.`comment`,pd.status
    from picking_details as pd
    where picking_id = #{pickingId} and pd.goods_id = #{goodsId}
  </select>

  <update id="updatePickingDetailsStatus">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update picking_details
    set status = 2
    where picking_details_id = #{pickingDetailsId,jdbcType=INTEGER}
  </update>

  <select id="selectPickingInfoList" resultType="com.mingyuansoftware.aifactory.model.dto.PickingDetailsDto" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select pd.picking_details_id,IFNULL(pd.quantity,0) as quantity,gd.parts_cd,gd.goods_name,gd.specification,pk.picking_number,
    pk.lot_number,pk.add_time,sf.name,wh.warehouse_name as intoWarehouseName,wh1.warehouse_name as outWarehouseName
    from picking_details AS pd
    LEFT JOIN goods AS gd ON (pd.goods_id = gd.goods_id)
    LEFT JOIN picking AS pk ON (pd.picking_id= pk.picking_id)
    LEFT JOIN staff as sf ON (sf.staff_id = pk.picking_staff_id)
    LEFT JOIN warehouse as wh ON (wh.warehouse_id = pk.into_warehouse_id)
    LEFT JOIN warehouse as wh1 ON (wh1.warehouse_id = pk.out_warehouse_id)
    WHERE pk.is_delete = 0
    ORDER BY pd.picking_details_id DESC
  </select>

  <select id="selectCountPickingInfoList" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select COUNT(pd.picking_details_id)
    from picking_details AS pd
    LEFT JOIN goods AS gd ON (pd.goods_id = gd.goods_id)
    LEFT JOIN picking AS pk ON (pd.picking_id= pk.picking_id)
    LEFT JOIN staff as sf ON (sf.staff_id = pk.picking_staff_id)
    LEFT JOIN warehouse as wh ON (wh.warehouse_id = pk.into_warehouse_id)
    LEFT JOIN warehouse as wh1 ON (wh1.warehouse_id = pk.out_warehouse_id)
    WHERE pk.is_delete = 0
    ORDER BY pd.picking_details_id DESC
  </select>
  <update id="updatePickingDetailsGoodsQuantityByPDId" >
    update picking_details
    set
    quantity = #{quantity,jdbcType=DECIMAL}
    where picking_details_id = #{pickingDetailsId,jdbcType=INTEGER}
  </update>

  <select id="selectPickingStatusById" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select pd.picking_details_id, pd.picking_id, pd.goods_id, pd.quantity, pd.`comment`,pd.status
    from picking_details  AS pd
    LEFT JOIN picking AS pk ON (pd.picking_id= pk.picking_id)
    WHERE pk.ps_id = #{productionOrderId} AND pd.goods_id = #{goodsId} AND is_delete =0
  </select>

</mapper>