<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mingyuansoftware.aifactory.mapper.SalesOrderDetailsMapper" >
  <resultMap id="BaseResultMap" type="com.mingyuansoftware.aifactory.model.SalesOrderDetails" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="sales_order_details_id" property="salesOrderDetailsId" jdbcType="INTEGER" />
    <result column="sales_order_id" property="salesOrderId" jdbcType="INTEGER" />
    <result column="lot_number" property="lotNumber" jdbcType="VARCHAR" />
    <result column="unit_price" property="unitPrice" jdbcType="DECIMAL" />
    <result column="out_quantity" property="outQuantity" jdbcType="DECIMAL" />
    <result column="not_out_quantity" property="notOutQuantity" jdbcType="DECIMAL" />
    <result column="total_price" property="totalPrice" jdbcType="DECIMAL" />
    <result column="customs_category" property="customsCategory" jdbcType="VARCHAR" />
    <result column="sea_tariff_number" property="seaTariffNumber" jdbcType="VARCHAR" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="quantity" property="quantity" jdbcType="DECIMAL" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="skg_count" property="skgCount" jdbcType="DECIMAL" />
    <result column="boxes_number" property="boxesNumber" jdbcType="INTEGER" />
    <result column="return_number" property="returnNumber" jdbcType="VARCHAR" />
    <association column="goods_id" property="goods"
                 select="com.mingyuansoftware.aifactory.mapper.GoodsMapper.selectByPrimaryKey"></association>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from sales_order_details
    where sales_order_details_id = #{salesOrderDetailsId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mingyuansoftware.aifactory.model.SalesOrderDetails" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Integer" keyProperty="salesOrderDetailsId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sales_order_details (sales_order_id,goods_id,unit_price,
      lot_number, out_quantity,not_out_quantity,
      total_price, customs_category, sea_tariff_number,
      `comment`,boxes_number,return_number)
    values (#{salesOrderId,jdbcType=INTEGER},#{goodsId,jdbcType=INTEGER},#{unitPrice,jdbcType=DECIMAL},
      #{lotNumber,jdbcType=VARCHAR}, #{outQuantity,jdbcType=DECIMAL}, #{notOutQuantity,jdbcType=DECIMAL},
      #{totalPrice,jdbcType=DECIMAL},#{customsCategory,jdbcType=VARCHAR}, #{seaTariffNumber,jdbcType=VARCHAR},
      #{comment,jdbcType=VARCHAR},#{boxesNumber,jdbcType=INTEGER},#{returnNumber,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.mingyuansoftware.aifactory.model.SalesOrderDetails" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sales_order_details
    set sales_order_id = #{salesOrderId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      unit_price = #{unitPrice,jdbcType=DECIMAL},
      lot_number = #{lotNumber,jdbcType=VARCHAR},
      out_quantity = #{outQuantity,jdbcType=DECIMAL},
      not_out_quantity = #{notOutQuantity,jdbcType=DECIMAL},
      total_price = #{totalPrice,jdbcType=DECIMAL},
      customs_category = #{customsCategory,jdbcType=VARCHAR},
      sea_tariff_number = #{seaTariffNumber,jdbcType=VARCHAR},
      `comment` = #{comment,jdbcType=VARCHAR},
    boxes_number = #{boxesNumber,jdbcType=INTEGER},
    return_number = #{returnNumber,jdbcType=VARCHAR},
    status = #{status,jdbcType=TINYINT}
    where sales_order_details_id = #{salesOrderDetailsId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select sales_order_details_id, sales_order_id,goods_id,IFNULL(unit_price,0) AS unit_price,lot_number,IFNULL(out_quantity,0) AS out_quantity,
    IFNULL(not_out_quantity,0) AS not_out_quantity,total_price,customs_category, sea_tariff_number, `comment`,boxes_number,return_number,status
    from sales_order_details
    where sales_order_details_id = #{salesOrderDetailsId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select sales_order_details_id, sales_order_id,goods_id,unit_price,lot_number,out_quantity,not_out_quantity,
    total_price,customs_category, sea_tariff_number, `comment`,boxes_number,return_number
    from sales_order_details
  </select>

  <select id="selectSalesOrderDetailsListById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select sales_order_details_id, sales_order_id,goods_id,unit_price,lot_number,(IFNULL(out_quantity,0)+IFNULL(not_out_quantity,0)) AS quantity,
    total_price,customs_category, sea_tariff_number, `comment`,status,boxes_number,return_number,
    IFNULL(out_quantity,0) AS out_quantity,IFNULL(not_out_quantity,0) AS not_out_quantity
    from sales_order_details
    where sales_order_id = #{salesOrderId,jdbcType=INTEGER}
  </select>

  <select id="selectSalesReturnGoodsCount" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select COUNT(sales_order_details_id)
    from sales_order_details
    where sales_order_id = #{salesOrderId,jdbcType=INTEGER}
  </select>

  <select id="selectSalesDetailsList" resultType="com.mingyuansoftware.aifactory.model.dto.SalesDetailsDto" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select sod.sales_order_details_id, sod.sales_order_id,IFNULL((sod.out_quantity + sod.not_out_quantity),0) as quantity,sod.goods_id,
    IFNULL(sod.total_price,0) AS total_price,so.sales_order_number,so.add_time,ct.customer_name,gd.parts_cd,gd.goods_name,
    gd.specification,IFNULL(sod.unit_price,0) AS sellingPrice,IFNULL(gid.skgCount,0) as skgCount,IFNULL(sod.unit_price,0) as unit_price
    from sales_order_details AS sod
    LEFT JOIN (select gid as goodsId,sum(skg_count) as skgCount from stock_kucun_goods group by gid) AS gid ON (sod.goods_id = gid.goodsId)
    LEFT JOIN sales_order AS so on (so.sales_order_id = sod.sales_order_id)
    LEFT JOIN goods AS gd on (gd.goods_id = sod.goods_id)
    LEFT JOIN customer AS ct on (so.customer_id = ct.customer_id)
    <where>
      <if test="salesDetailsDto.partsCd != null and salesDetailsDto.partsCd != ''">
        AND gd.parts_cd like "%"#{salesDetailsDto.partsCd}"%"
      </if>
      <if test="salesDetailsDto.customerName != null and salesDetailsDto.customerName != ''">
        AND ct.customer_name like "%"#{salesDetailsDto.customerName}"%"
      </if>
      <if test="salesDetailsDto.addtime != null and salesDetailsDto.addtime  != ''">
        AND so.add_time like "%"#{salesDetailsDto.addtime}"%"
      </if>
      <if test="salesDetailsDto.goodsName != null and salesDetailsDto.goodsName != ''">
        AND gd.goods_name like "%"#{salesDetailsDto.goodsName}"%"
      </if>
      <if test="salesDetailsDto.specification != null and salesDetailsDto.specification  != ''">
        AND gd.specification like "%"#{salesDetailsDto.specification}"%"
      </if>
      <if test="salesDetailsDto.quantity != null and salesDetailsDto.quantity  != '' or salesDetailsDto.quantity  == '0'.toString()">
        AND (sod.out_quantity + sod.not_out_quantity) = #{salesDetailsDto.quantity}
      </if>
      <if test="salesDetailsDto.sellingPrice != null and salesDetailsDto.sellingPrice  != '' or salesDetailsDto.sellingPrice  == '0'.toString()">
        AND sod.unit_price  = #{salesDetailsDto.sellingPrice}
      </if>
      <if test="salesDetailsDto.totalPrice != null and salesDetailsDto.totalPrice  != '' or salesDetailsDto.totalPrice  == '0'.toString()">
        AND sod.total_price = #{salesDetailsDto.totalPrice}
      </if>
      <if test="salesDetailsDto.skgCount != null and salesDetailsDto.skgCount  != '' or salesDetailsDto.skgCount  == '0'.toString()">
        AND gid.skgCount = #{salesDetailsDto.skgCount}
      </if>
      <if test="salesDetailsDto.salesOrderNumber != null and salesDetailsDto.salesOrderNumber  != ''">
        AND so.sales_order_number like "%"#{salesDetailsDto.salesOrderNumber}"%"
      </if>
      <if test="startTime != null and startTime  != ''">
        AND so.add_time >= #{startTime}
      </if>
      <if test="endTime != null and endTime  != ''">
        AND so.add_time &lt;= #{endTime}
      </if>
      AND so.is_delete = 0
    </where>
    ORDER BY sod.sales_order_details_id DESC
  </select>

  <select id="selectSalesDetailsCount" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(sod.sales_order_details_id)
    from sales_order_details AS sod
    LEFT JOIN (select gid as goodsId,sum(skg_count) as skgCount from stock_kucun_goods group by gid) AS gid ON (sod.goods_id = gid.goodsId)
    LEFT JOIN sales_order AS so on (so.sales_order_id = sod.sales_order_id)
    LEFT JOIN goods AS gd on (gd.goods_id = sod.goods_id)
    LEFT JOIN customer AS ct on (so.customer_id = ct.customer_id)
    <where>
      <if test="salesDetailsDto.partsCd != null and salesDetailsDto.partsCd != ''">
        AND gd.parts_cd like "%"#{salesDetailsDto.partsCd}"%"
      </if>
      <if test="salesDetailsDto.customerName != null and salesDetailsDto.customerName != ''">
        AND ct.customer_name like "%"#{salesDetailsDto.customerName}"%"
      </if>
      <if test="salesDetailsDto.addtime != null and salesDetailsDto.addtime  != ''">
        AND so.add_time like "%"#{salesDetailsDto.addtime}"%"
      </if>
      <if test="salesDetailsDto.goodsName != null and salesDetailsDto.goodsName != ''">
        AND gd.goods_name like "%"#{salesDetailsDto.goodsName}"%"
      </if>
      <if test="salesDetailsDto.specification != null and salesDetailsDto.specification  != ''">
        AND gd.specification like "%"#{salesDetailsDto.specification}"%"
      </if>
      <if test="salesDetailsDto.quantity != null and salesDetailsDto.quantity  != '' or salesDetailsDto.quantity  == '0'.toString()">
        AND (sod.out_quantity + sod.not_out_quantity) = #{salesDetailsDto.quantity}
      </if>
      <if test="salesDetailsDto.sellingPrice != null and salesDetailsDto.sellingPrice  != '' or salesDetailsDto.sellingPrice  == '0'.toString()">
        AND sod.unit_price  = #{salesDetailsDto.sellingPrice}
      </if>
      <if test="salesDetailsDto.totalPrice != null and salesDetailsDto.totalPrice  != '' or salesDetailsDto.totalPrice  == '0'.toString()">
        AND sod.total_price = #{salesDetailsDto.totalPrice}
      </if>
      <if test="salesDetailsDto.skgCount != null and salesDetailsDto.skgCount  != '' or salesDetailsDto.skgCount  == '0'.toString()">
        AND gid.skgCount = #{salesDetailsDto.skgCount}
      </if>
      <if test="salesDetailsDto.salesOrderNumber != null and salesDetailsDto.salesOrderNumber  != ''">
        AND so.sales_order_number like "%"#{salesDetailsDto.salesOrderNumber}"%"
      </if>
      <if test="startTime != null and startTime  != ''">
        AND so.add_time >= #{startTime}
      </if>
      <if test="endTime != null and endTime  != ''">
        AND so.add_time &lt;= #{endTime}
      </if>
      AND so.is_delete = 0
    </where>
    ORDER BY sod.sales_order_details_id DESC
  </select>

  <select id="selectGoodsQuantityById" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select sod.sales_order_details_id, sod.sales_order_id,sod.goods_id,sod.unit_price,sod.lot_number,IFNULL((sod.out_quantity + sod.not_out_quantity),0) as quantity,
    sod.total_price,sod.customs_category, sod.sea_tariff_number, sod.`comment`,sod.boxes_number,sod.return_number
    from sales_order_details as sod
    left join sales_order as so ON (sod.sales_order_id =so.sales_order_id)
    where sod.sales_order_id = #{salesOrderId} and sod.goods_id = #{goodsId} and so.is_delete = 0
  </select>

  <select id="selectPdaOutboundGoodsList" resultType="com.mingyuansoftware.aifactory.model.PDAOutboundGoods" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select sod.sales_order_details_id, sod.sales_order_id,sod.goods_id,sod.unit_price,sod.lot_number,(sod.out_quantity+sod.not_out_quantity) AS quantity,
    sod.total_price,sod.customs_category, sod.sea_tariff_number, sod.`comment`,gd.parts_cd,gd.goods_name,gd.specification,
    gd.wp_id,wp.wp_name
    from sales_order_details as sod
    LEFT JOIN goods as gd ON (sod.goods_id = gd.goods_id)
    LEFT JOIN warehouse_position as wp ON (gd.wp_id = wp.wp_id)
    where sod.sales_order_id = #{salesOrderId} and sod.status =1
  </select>
  <select id="selectPdaOutboundGoodsCount" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select sales_order_details_id, sales_order_id,goods_id,unit_price,lot_number,IFNULL((out_quantity + not_out_quantity),0) as quantity,
    total_price,customs_category,sea_tariff_number,`comment`,status,boxes_number,return_number
    from sales_order_details
    where sales_order_id = #{salesOrderId} and goods_id = #{goodsId}
  </select>

  <update id="updateSaleOrderDetailsStatus">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sales_order_details
    set
    status = 2
    where sales_order_details_id = #{salesOrderDetailsId,jdbcType=INTEGER}
  </update>

  <update id="updateReturnQuantity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sales_order_details
    set
    return_amount = #{quantity,jdbcType=DECIMAL}
    where sales_order_id = #{salesOrderId,jdbcType=INTEGER} AND  goods_id = #{goodsId,jdbcType=INTEGER}
  </update>

  <select id="selectReturnQuantity" resultType="com.mingyuansoftware.aifactory.model.SalesOrderDetails" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select sales_order_details_id, sales_order_id,goods_id,unit_price,lot_number,out_quantity,not_out_quantity,
    total_price,customs_category, sea_tariff_number, `comment`,return_amount
    from sales_order_details
    where  sales_order_id = #{salesOrderId,jdbcType=INTEGER} AND  goods_id = #{goodsId,jdbcType=INTEGER}
  </select>

  <select id="selectSalesReturnGoodsList" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select sales_order_details_id, sales_order_id,goods_id,unit_price,lot_number,(out_quantity+not_out_quantity-return_amount) AS quantity,
    total_price,customs_category, sea_tariff_number, `comment`,status,IFNULL(skg.skg_count,0) as skg_count
    from sales_order_details
    LEFT JOIN (select sum(skg_count) AS skg_count,gid from stock_kucun_goods GROUP BY gid) as skg ON (sales_order_details.goods_id = skg.gid)
    where sales_order_id = #{salesOrderId,jdbcType=INTEGER}
  </select>
</mapper>