<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mingyuansoftware.aifactory.mapper.GoodsMapper" >
  <resultMap id="BaseResultMap" type="com.mingyuansoftware.aifactory.model.Goods" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="goods_id" property="goodsId" jdbcType="INTEGER" />
    <result column="goods_number" property="goodsNumber" jdbcType="VARCHAR" />
    <result column="parts_cd" property="partsCd" jdbcType="VARCHAR" />
    <result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
    <result column="goods_name_jp" property="goodsNameJp" jdbcType="VARCHAR" />
    <result column="variety" property="variety" jdbcType="VARCHAR" />
    <result column="unit" property="unit" jdbcType="VARCHAR" />
    <result column="specification" property="specification" jdbcType="VARCHAR" />
    <result column="weight" property="weight" jdbcType="REAL" />
    <result column="unit_price" property="unitPrice" jdbcType="DECIMAL" />
    <result column="a_price" property="aPrice" jdbcType="DECIMAL" />
    <result column="b_price" property="bPrice" jdbcType="DECIMAL" />
    <result column="purchase_order_quantity" property="purchaseOrderQuantity" jdbcType="DECIMAL" />
    <result column="selling_price" property="sellingPrice" jdbcType="DECIMAL" />
    <result column="wholesale_prices" property="wholesalePrices" jdbcType="DECIMAL" />
    <result column="minimum_stock" property="minimumStock" jdbcType="DECIMAL" />
    <result column="procurement_reserve_stock_index" property="procurementReserveStockIndex" jdbcType="VARCHAR" />
    <result column="japan_stock" property="japanStock" jdbcType="DECIMAL" />
    <result column="tj_stock" property="tjStock" jdbcType="DECIMAL" />
    <result column="purchase_price" property="purchasePrice" jdbcType="DECIMAL" />
    <result column="salary_price" property="salaryPrice" jdbcType="DECIMAL" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="average_price" property="averagePrice" jdbcType="DECIMAL" />
    <result column="supplier_id" property="supplierId" jdbcType="INTEGER" />
    <result column="boxes_number" property="boxesNumber" jdbcType="INTEGER" />
    <result column="bundle_number" property="bundleNumber" jdbcType="INTEGER" />
    <result column="monthly_sales_volume" property="monthlySalesVolume" jdbcType="DECIMAL" />
    <result column="selling_months" property="sellingMonths" jdbcType="DECIMAL" />
    <result column="net_weight" property="netWeight" jdbcType="DECIMAL" />
    <result column="gross_weight" property="grossWeight" jdbcType="DECIMAL" />
    <result column="volume" property="volume" jdbcType="DECIMAL" />
    <result column="months_in_stock" property="monthsInStock" jdbcType="VARCHAR" />
    <result column="category" property="category" jdbcType="TINYINT" />
    <result column="print_number" property="printNumber" jdbcType="INTEGER" />
    <result column="cycle" property="cycle" jdbcType="DECIMAL" />
    <association column="wp_id" property="warehousePosition"
                 select="com.mingyuansoftware.aifactory.mapper.WarehousePositionMapper.selectEditWP"></association>
    <association column="supplier_id" property="supplier"
                 select="com.mingyuansoftware.aifactory.mapper.SupplierMapper.selectByPrimaryKey"></association>
    <association column="uf_id" property="uploadFiles"
                 select="com.mingyuansoftware.aifactory.mapper.UploadFilesMapper.selectByPrimaryKey"></association>
    <association column="variety_value" property="goodsVariety"
                 select="com.mingyuansoftware.aifactory.mapper.GoodsVarietyMapper.selectByPrimaryKey"></association>

  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from goods
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mingyuansoftware.aifactory.model.Goods" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Integer" keyProperty="goodsId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into goods (goods_number,parts_cd, goods_name,goods_name_jp, variety_value,
      unit, specification, weight, 
      unit_price, a_price, b_price, 
      purchase_order_quantity, selling_price, wholesale_prices, 
      minimum_stock, procurement_reserve_stock_index, 
      japan_stock, tj_stock,
      purchase_price, salary_price, uf_id, 
      create_time, update_time,average_price,supplier_id,boxes_number,bundle_number,
      monthly_sales_volume,selling_months,net_weight,gross_weight,volume,months_in_stock,category,wp_id,cycle
      )
    values (#{goodsNumber,jdbcType=VARCHAR},#{partsCd,jdbcType=VARCHAR}, #{goodsName,jdbcType=VARCHAR}, #{goodsNameJp,jdbcType=VARCHAR}, #{varietyValue,jdbcType=INTEGER},
      #{unit,jdbcType=VARCHAR}, #{specification,jdbcType=VARCHAR}, #{weight,jdbcType=REAL}, 
      #{unitPrice,jdbcType=DECIMAL}, #{aPrice,jdbcType=DECIMAL}, #{bPrice,jdbcType=DECIMAL}, 
      #{purchaseOrderQuantity,jdbcType=DECIMAL}, #{sellingPrice,jdbcType=DECIMAL}, #{wholesalePrices,jdbcType=DECIMAL}, 
      #{minimumStock,jdbcType=DECIMAL}, #{procurementReserveStockIndex,jdbcType=VARCHAR}, 
      #{japanStock,jdbcType=DECIMAL}, #{tjStock,jdbcType=DECIMAL},
      #{purchasePrice,jdbcType=DECIMAL}, #{salaryPrice,jdbcType=DECIMAL}, #{ufId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
      #{averagePrice,jdbcType=DECIMAL},#{supplierId,jdbcType=INTEGER},#{boxesNumber,jdbcType=INTEGER},#{bundleNumber,jdbcType=INTEGER},
      #{monthlySalesVolume,jdbcType=DECIMAL},#{sellingMonths,jdbcType=DECIMAL},#{netWeight,jdbcType=DECIMAL},
      #{grossWeight,jdbcType=DECIMAL},#{volume,jdbcType=DECIMAL},#{monthsInStock,jdbcType=VARCHAR},#{category,jdbcType=TINYINT},
      #{wpId,jdbcType=INTEGER},#{cycle,jdbcType=DECIMAL}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.mingyuansoftware.aifactory.model.Goods" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update goods
    set goods_number = #{goodsNumber,jdbcType=VARCHAR},
      parts_cd = #{partsCd,jdbcType=VARCHAR},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      variety_value = #{varietyValue,jdbcType=INTEGER},
      unit = #{unit,jdbcType=VARCHAR},
      specification = #{specification,jdbcType=VARCHAR},
      weight = #{weight,jdbcType=REAL},
      unit_price = #{unitPrice,jdbcType=DECIMAL},
      a_price = #{aPrice,jdbcType=DECIMAL},
      b_price = #{bPrice,jdbcType=DECIMAL},
      purchase_order_quantity = #{purchaseOrderQuantity,jdbcType=DECIMAL},
      selling_price = #{sellingPrice,jdbcType=DECIMAL},
      wholesale_prices = #{wholesalePrices,jdbcType=DECIMAL},
      minimum_stock = #{minimumStock,jdbcType=DECIMAL},
      procurement_reserve_stock_index = #{procurementReserveStockIndex,jdbcType=VARCHAR},
      japan_stock = #{japanStock,jdbcType=DECIMAL},
      tj_stock = #{tjStock,jdbcType=DECIMAL},
      purchase_price = #{purchasePrice,jdbcType=DECIMAL},
      salary_price = #{salaryPrice,jdbcType=DECIMAL},
      uf_id = #{ufId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      average_price = #{averagePrice,jdbcType=DECIMAL},
      supplier_id = #{supplierId,jdbcType=INTEGER},
      boxes_number = #{boxesNumber,jdbcType=INTEGER},
      bundle_number = #{bundleNumber,jdbcType=INTEGER},
      monthly_sales_volume = #{monthlySalesVolume,jdbcType=DECIMAL},
      selling_months = #{sellingMonths,jdbcType=DECIMAL},
      net_weight = #{netWeight,jdbcType=DECIMAL},
      gross_weight = #{grossWeight,jdbcType=DECIMAL},
      volume = #{volume,jdbcType=DECIMAL},
      months_in_stock = #{monthsInStock,jdbcType=VARCHAR},
      category = #{category,jdbcType=TINYINT},
      wp_id =  #{wpId,jdbcType=INTEGER},
      cycle = #{cycle,jdbcType=DECIMAL}
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select goods_id,goods_number, parts_cd, goods_name, variety_value, unit, specification, IFNULL(weight,0) AS weight, IFNULL(unit_price,0) AS unit_price,
    IFNULL(a_price,0) AS a_price, IFNULL(b_price,0) AS b_price, IFNULL(purchase_order_quantity,0) AS purchase_order_quantity,
    IFNULL(selling_price,0) AS selling_price, IFNULL(wholesale_prices,0) AS wholesale_prices, IFNULL(minimum_stock,0) AS minimum_stock,
    procurement_reserve_stock_index, IFNULL(japan_stock,0) AS japan_stock, IFNULL(tj_stock,0) AS tj_stock, IFNULL(purchase_price,0) AS purchase_price,
    IFNULL(salary_price,0) AS salary_price, uf_id,create_time, update_time,IFNULL(average_price,0) AS average_price,supplier_id,IFNULL(boxes_number,0) AS boxes_number,
    IFNULL(bundle_number,0) AS bundle_number,IFNULL(monthly_sales_volume,0) AS monthly_sales_volume,IFNULL(selling_months,0) AS selling_months,
    IFNULL(net_weight,0) AS net_weight,IFNULL(gross_weight,0) AS gross_weight,IFNULL(volume,0) AS volume,IFNULL(months_in_stock,0) AS months_in_stock,category,wp_id,cycle
    from goods
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select goods_id, goods_number, parts_cd, goods_name, variety_value, unit, specification, weight, unit_price,
    a_price, b_price, purchase_order_quantity, selling_price, wholesale_prices, minimum_stock, 
    procurement_reserve_stock_index, japan_stock, tj_stock, purchase_price,
    salary_price, uf_id, create_time, update_time,average_price,supplier_id,boxes_number,bundle_number,
    monthly_sales_volume,selling_months,net_weight,gross_weight,volume,months_in_stock,category,wp_id,cycle
    from goods
  </select>

  <select id="selectGoodsList" resultMap="BaseResultMap" parameterType="com.mingyuansoftware.aifactory.model.dto.GoodsDto">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select goods_id, goods_number,parts_cd, goods_name, gv.cn_name as variety, unit, specification, IFNULL(weight,0) AS weight, IFNULL(unit_price,0) AS unit_price,
    IFNULL(a_price,0) AS a_price, IFNULL(b_price,0) AS b_price, IFNULL(purchase_order_quantity,0)AS purchase_order_quantity, IFNULL(selling_price,0) AS selling_price,
    IFNULL(wholesale_prices,0) AS wholesale_prices, IFNULL(minimum_stock,0) AS minimum_stock,procurement_reserve_stock_index, IFNULL(japan_stock,0)AS japan_stock,
    IFNULL(tj_stock,0) AS tj_stock,IFNULL(purchase_price,0) AS purchase_price,IFNULL(salary_price,0)AS salary_price, uf_id, create_time, update_time,
    IFNULL(average_price,0) AS average_price,supplier_id,boxes_number,bundle_number,monthly_sales_volume,selling_months,net_weight,gross_weight,volume,months_in_stock,
    category,wp_id
    from goods
    LEFT JOIN goods_variety AS gv ON (goods.variety_value = gv.variety_value)
    <where>
      <if test="goodsDto.goodsNumber != null and goodsDto.goodsNumber != ''">
        AND goods_number like "%"#{goodsDto.goodsNumber}"%"
      </if>
      <if test="goodsDto.partsCd != null and goodsDto.partsCd != ''">
        AND parts_cd like "%"#{goodsDto.partsCd}"%"
      </if>
      <if test="goodsDto.goodsName != null and goodsDto.goodsName != ''">
        AND goods_name like "%"#{goodsDto.goodsName}"%"
      </if>
      <if test="goodsDto.variety != null and goodsDto.variety  != ''">
        AND gv.cn_name like "%"#{goodsDto.variety }"%"
      </if>
      <if test="goodsDto.unit != null and goodsDto.unit != ''">
        AND unit like "%"#{goodsDto.unit}"%"
      </if>
      <if test="goodsDto.specification != null and goodsDto.specification  != ''">
        AND specification like "%"#{goodsDto.specification}"%"
      </if>
      <if test="goodsDto.weight != null and goodsDto.weight  != ''">
        AND weight  = #{goodsDto.weight}
      </if>
      <if test="goodsDto.unitPrice != null and goodsDto.unitPrice  != '' or goodsDto.unitPrice == '0'.toString()">
        AND unit_price  = #{goodsDto.unitPrice}
      </if>
      <if test="goodsDto.aPrice != null and goodsDto.aPrice  != '' or goodsDto.aPrice == '0'.toString()">
        AND a_price = #{goodsDto.aPrice}
      </if>
      <if test="goodsDto.bPrice != null and goodsDto.bPrice  != '' or goodsDto.bPrice == '0'.toString()">
        AND b_price = #{goodsDto.bPrice}
      </if>
      <if test="goodsDto.sellingPrice != null and goodsDto.sellingPrice  != '' or goodsDto.sellingPrice == '0'.toString()">
        AND selling_price= #{goodsDto.sellingPrice}
      </if>
      <if test="goodsDto.wholesalePrices != null and goodsDto.wholesalePrices  != '' or goodsDto.wholesalePrices == '0'.toString()">
        AND wholesale_prices = #{goodsDto.wholesalePrices}
      </if>
      <if test="goodsDto.minimumStock != null and goodsDto.minimumStock  != ''or goodsDto.minimumStock == '0'.toString()">
        AND minimum_stock  = #{goodsDto.minimumStock}
      </if>
      <if test="goodsDto.japanStock != null and goodsDto.japanStock  != ''or goodsDto.japanStock == '0'.toString()">
        AND japan_stock = #{goodsDto.japanStock}
      </if>
      <if test="goodsDto.tjStock != null and goodsDto.tjStock  != ''or goodsDto.tjStock == '0'.toString()">
        AND tj_stock = #{goodsDto.tjStock}
      </if>
    </where>
    ORDER BY goods_id DESC
  </select>
  <select id="selectCount" resultType="java.lang.Integer" parameterType="com.mingyuansoftware.aifactory.model.dto.GoodsDto">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select COUNT(goods_id)
    from goods
    LEFT JOIN goods_variety AS gv ON (goods.variety_value = gv.variety_value)
    <where>
      <if test="goodsDto.goodsNumber != null and goodsDto.goodsNumber != ''">
        AND goods_number like "%"#{goodsDto.goodsNumber}"%"
      </if>
      <if test="goodsDto.partsCd != null and goodsDto.partsCd != ''">
        AND parts_cd like "%"#{goodsDto.partsCd}"%"
      </if>
      <if test="goodsDto.goodsName != null and goodsDto.goodsName != ''">
        AND goods_name like "%"#{goodsDto.goodsName}"%"
      </if>
      <if test="goodsDto.variety != null and goodsDto.variety  != ''">
        AND gv.cn_name like "%"#{goodsDto.variety }"%"
      </if>
      <if test="goodsDto.unit != null and goodsDto.unit != ''">
        AND unit like "%"#{goodsDto.unit}"%"
      </if>
      <if test="goodsDto.specification != null and goodsDto.specification  != ''">
        AND specification like "%"#{goodsDto.specification}"%"
      </if>
      <if test="goodsDto.weight != null and goodsDto.weight  != ''">
        AND weight  = #{goodsDto.weight}
      </if>
      <if test="goodsDto.unitPrice != null and goodsDto.unitPrice  != '' or goodsDto.unitPrice == '0'.toString()">
        AND unit_price  = #{goodsDto.unitPrice}
      </if>
      <if test="goodsDto.aPrice != null and goodsDto.aPrice  != '' or goodsDto.aPrice == '0'.toString()">
        AND a_price = #{goodsDto.aPrice}
      </if>
      <if test="goodsDto.bPrice != null and goodsDto.bPrice  != '' or goodsDto.bPrice == '0'.toString()">
        AND b_price = #{goodsDto.bPrice}
      </if>
      <if test="goodsDto.sellingPrice != null and goodsDto.sellingPrice  != '' or goodsDto.sellingPrice == '0'.toString()">
        AND selling_price= #{goodsDto.sellingPrice}
      </if>
      <if test="goodsDto.wholesalePrices != null and goodsDto.wholesalePrices  != '' or goodsDto.wholesalePrices == '0'.toString()">
        AND wholesale_prices = #{goodsDto.wholesalePrices}
      </if>
      <if test="goodsDto.minimumStock != null and goodsDto.minimumStock  != ''or goodsDto.minimumStock == '0'.toString()">
        AND minimum_stock  = #{goodsDto.minimumStock}
      </if>
      <if test="goodsDto.japanStock != null and goodsDto.japanStock  != ''or goodsDto.japanStock == '0'.toString()">
        AND japan_stock = #{goodsDto.japanStock}
      </if>
      <if test="goodsDto.tjStock != null and goodsDto.tjStock  != ''or goodsDto.tjStock == '0'.toString()">
        AND tj_stock = #{goodsDto.tjStock}
      </if>
    </where>
    ORDER BY goods_id DESC
  </select>

  <select id="selectExportGoodsList" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select goods_id, parts_cd, goods_name, variety_value, unit, specification, weight, unit_price,
    a_price, b_price, purchase_order_quantity, selling_price, wholesale_prices, minimum_stock,
    procurement_reserve_stock_index, japan_stock, tj_stock, purchase_price,
    salary_price, uf_id, create_time, update_time,average_price,supplier_id,boxes_number,bundle_number,
    monthly_sales_volume,selling_months,net_weight,gross_weight,volume,months_in_stock,category,wp_id
    from goods
  </select>

  <select id="selectAllGoodsList" resultType="com.mingyuansoftware.aifactory.model.KucunGoods" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select goods_id, parts_cd, goods_name,gv.cn_name as variety, unit, specification, weight, unit_price,IFNULL(purchase_order_quantity,0) AS purchase_order_quantity,
    IFNULL(a_price,0) AS a_price, b_price,IFNULL(selling_price,0) AS selling_price, wholesale_prices, minimum_stock,
    procurement_reserve_stock_index, japan_stock, tj_stock, purchase_price,
    salary_price, uf_id,create_time, update_time,IFNULL(average_price,0) AS average_price,supplier_id,IFNULL(boxes_number,0) AS boxes_number,
    bundle_number,IFNULL(monthly_sales_volume,0) AS monthly_sales_volume,IFNULL(selling_months,0) AS selling_months,IFNULL(net_weight,0) AS net_weight,
    IFNULL(gross_weight,0) AS gross_weight,IFNULL(volume,0) AS volume,months_in_stock,category,wp_id
    from goods
    LEFT JOIN goods_variety AS gv ON (goods.variety_value = gv.variety_value)
    <where>
    <if test="partsCd != null and partsCd != ''">
      AND parts_cd like "%"#{partsCd}"%"
    </if>
      <if test="goodsId != null and goodsId != ''">
        AND goods_id = #{goodsId}
      </if>
      <if test="goodsName != null and goodsName != ''">
        AND goods_name like "%"#{goodsName}"%"
      </if>
    </where>
  </select>
  <select id="selectAllGoodsCount" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(goods_id)
    from goods
    LEFT JOIN goods_variety AS gv ON (goods.variety_value = gv.variety_value)
    <where>
      <if test="partsCd != null and partsCd != ''">
        AND parts_cd like "%"#{partsCd}"%"
      </if>
      <if test="goodsId != null and goodsId != ''">
        AND goods_id = #{goodsId}
      </if>
      <if test="goodsName != null and goodsName != ''">
        AND goods_name like "%"#{goodsName}"%"
      </if>
    </where>
  </select>

  <select id="selectTjGoodsKucunList" resultType="com.mingyuansoftware.aifactory.model.dto.TjGoodsKucunDto" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select gd.goods_id,gd.parts_cd,gd.goods_name,gd.specification,IFNULL(skg.skg_count,0) AS skgCount,
    IFNULL(gd.a_price,0) AS a_price,IFNULL(gd.b_price,0) AS b_price,gd.category,wh.warehouse_name,wp.wp_name,IFNULL(skgt.latest_Shipment,0) as latest_Shipment,IFNULL((skg.skg_count*gd.a_price),0) as amount
    FROM goods AS gd
    LEFT JOIN (select skgid,sum(skg_count) AS skg_count,warehouse_id,skg_type,gid from stock_kucun_goods GROUP BY gid) AS skg ON (gd.goods_id = skg.gid)
    LEFT JOIN warehouse AS wh ON (wh.warehouse_id = skg.warehouse_id)
    LEFT JOIN warehouse_position AS wp ON (wp.wp_id = gd.wp_id)
    LEFT JOIN (SELECT max(GB.skgid),GB.gid,GB.skg_count*(-1) AS latest_Shipment,GB.skg_type FROM stock_kucun_goods AS GB WHERE GB.skg_type = '销售出库' GROUP BY gid ) AS skgt ON (gd.goods_id = skgt.gid)
    <where>
      <if test="tjGoodsKucunDto.partsCd != null and tjGoodsKucunDto.partsCd != ''">
        AND gd.parts_cd like "%"#{tjGoodsKucunDto.partsCd}"%"
      </if>
      <if test="tjGoodsKucunDto.goodsName != null and tjGoodsKucunDto.goodsName != ''">
        AND gd.goods_name like "%"#{tjGoodsKucunDto.goodsName}"%"
      </if>
      <if test="tjGoodsKucunDto.specification != null and tjGoodsKucunDto.specification  != ''">
        AND gd.specification like "%"#{tjGoodsKucunDto.specification}"%"
      </if>
      <if test="tjGoodsKucunDto.skgCount != null and tjGoodsKucunDto.skgCount  != '' or tjGoodsKucunDto.skgCount == '0'.toString()">
        AND IFNULL(skg.skg_count,0) = #{tjGoodsKucunDto.skgCount}
      </if>
      <if test="tjGoodsKucunDto.warehouseName != null and tjGoodsKucunDto.warehouseName  != ''">
        AND wh.warehouse_name  like "%"#{tjGoodsKucunDto.warehouseName}"%"
      </if>
      <if test="tjGoodsKucunDto.wpName != null and tjGoodsKucunDto.wpName  != ''">
        AND wp.wp_name like "%"#{tjGoodsKucunDto.wpName}"%"
      </if>
      <if test="tjGoodsKucunDto.latestShipment != null and tjGoodsKucunDto.latestShipment  != '' or tjGoodsKucunDto.latestShipment == '0'.toString()">
        AND IFNULL(skgt.latest_Shipment,0) = #{tjGoodsKucunDto.latestShipment}
      </if>
      <if test="tjGoodsKucunDto.aPrice != null and tjGoodsKucunDto.aPrice  != '' or tjGoodsKucunDto.aPrice == '0'.toString()">
        AND a_price = #{tjGoodsKucunDto.aPrice}
      </if>
      <if test="tjGoodsKucunDto.bPrice != null and tjGoodsKucunDto.bPrice  != ''  or tjGoodsKucunDto.bPrice == '0'.toString()">
        AND b_price = #{tjGoodsKucunDto.bPrice}
      </if>
      <if test="tjGoodsKucunDto.amount != null and tjGoodsKucunDto.amount  != ''  or tjGoodsKucunDto.amount == '0'.toString()">
        AND IFNULL((skg.skg_count*gd.a_price),0) = #{tjGoodsKucunDto.amount}
      </if>
      <if test="tjGoodsKucunDto.category != null and tjGoodsKucunDto.category  != '' or tjGoodsKucunDto.category == '0'.toString()">
        AND gd.category = #{tjGoodsKucunDto.category}
      </if>
    </where>
  </select>

  <select id="selectTjGoodsKucunCount" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select COUNT(1)
    from (select gd.goods_id,gd.parts_cd,gd.goods_name,gd.specification,IFNULL(skg.skg_count,0) AS skgCount,
    gd.a_price,gd.b_price,gd.category,wh.warehouse_name,wp.wp_name,IFNULL(skgt.latest_Shipment,0) as
    latest_Shipment,IFNULL((skg.skg_count*gd.a_price),0) as amount
    FROM goods AS gd
    LEFT JOIN (select skgid,sum(skg_count) AS skg_count,warehouse_id,skg_type,gid from stock_kucun_goods GROUP BY gid)
    AS skg ON (gd.goods_id = skg.gid)
    LEFT JOIN warehouse AS wh ON (wh.warehouse_id = skg.warehouse_id)
    LEFT JOIN warehouse_position AS wp ON (wp.wp_id = gd.wp_id)
    LEFT JOIN (SELECT max(GB.skgid),GB.gid,GB.skg_count*(-1) AS latest_Shipment,GB.skg_type FROM stock_kucun_goods AS GB
    WHERE GB.skg_type = '销售出库' GROUP BY gid ) AS skgt ON (gd.goods_id = skgt.gid)
    <where>
      <if test="tjGoodsKucunDto.partsCd != null and tjGoodsKucunDto.partsCd != ''">
        AND gd.parts_cd like "%"#{tjGoodsKucunDto.partsCd}"%"
      </if>
      <if test="tjGoodsKucunDto.goodsName != null and tjGoodsKucunDto.goodsName != ''">
        AND gd.goods_name like "%"#{tjGoodsKucunDto.goodsName}"%"
      </if>
      <if test="tjGoodsKucunDto.specification != null and tjGoodsKucunDto.specification  != ''">
        AND gd.specification like "%"#{tjGoodsKucunDto.specification}"%"
      </if>
      <if test="tjGoodsKucunDto.skgCount != null and tjGoodsKucunDto.skgCount  != '' or tjGoodsKucunDto.skgCount == '0'.toString()">
        AND IFNULL(skg.skg_count,0) = #{tjGoodsKucunDto.skgCount}
      </if>
      <if test="tjGoodsKucunDto.warehouseName != null and tjGoodsKucunDto.warehouseName  != ''">
        AND wh.warehouse_name  like "%"#{tjGoodsKucunDto.warehouseName}"%"
      </if>
      <if test="tjGoodsKucunDto.wpName != null and tjGoodsKucunDto.wpName  != ''">
        AND wp.wp_name like "%"#{tjGoodsKucunDto.wpName}"%"
      </if>
      <if test="tjGoodsKucunDto.latestShipment != null and tjGoodsKucunDto.latestShipment  != '' or tjGoodsKucunDto.latestShipment == '0'.toString()">
        AND IFNULL(skgt.latest_Shipment,0) = #{tjGoodsKucunDto.latestShipment}
      </if>
      <if test="tjGoodsKucunDto.aPrice != null and tjGoodsKucunDto.aPrice  != ''  or tjGoodsKucunDto.aPrice == '0'.toString()">
        AND a_price = #{tjGoodsKucunDto.aPrice}
      </if>
      <if test="tjGoodsKucunDto.bPrice != null and tjGoodsKucunDto.bPrice  != ''  or tjGoodsKucunDto.bPrice == '0'.toString()">
        AND b_price = #{tjGoodsKucunDto.bPrice}
      </if>
      <if test="tjGoodsKucunDto.amount != null and tjGoodsKucunDto.amount  != ''  or tjGoodsKucunDto.amount == '0'.toString()">
        AND IFNULL((skg.skg_count*gd.a_price),0) = #{tjGoodsKucunDto.amount}
      </if>
      <if test="tjGoodsKucunDto.category != null and tjGoodsKucunDto.category  != ''">
        AND gd.category = #{tjGoodsKucunDto.category}
      </if>
    </where>) as A
  </select>
  <select id="selectInventoryWarningList" resultType="com.mingyuansoftware.aifactory.model.dto.InventoryWarningDto" >
      select gd.goods_id,gd.parts_cd,gd.specification,gd.goods_name,IFNULL(skg.skg_count,0) as skgCount,
      gd.minimum_stock,wh.warehouse_name,
      gd.months_in_stock,IFNULL(pig.production_schedule,0) as production_schedule
      FROM goods AS gd
      left join (select skgid,sum(skg_count) AS skg_count,warehouse_id,skg_type,gid from stock_kucun_goods GROUP BY gid) as skg ON (gd.goods_id = skg.gid)
      left join  warehouse as wh on (wh.warehouse_id = skg.warehouse_id)
      left join production_instruction_goods as pig on (gd.goods_id = pig.goods_id)
      left join (select gds.goods_id from goods as gds ,(select skgid,sum(skg_count) AS skg_count,warehouse_id,gid from stock_kucun_goods GROUP BY gid) as skgcom
                 where gds.goods_id = skgcom.gid  and gds.minimum_stock > skgcom.skg_count) as skgid on(gd.goods_id = skgid.goods_id)
    <where>
        <if test="inventoryWarningDto.partsCd != null and inventoryWarningDto.partsCd != ''">
            and gd.parts_cd like "%"#{inventoryWarningDto.partsCd}"%"
        </if>
        <if test="inventoryWarningDto.goodsName != null and inventoryWarningDto.goodsName != ''">
            and gd.goods_name like "%"#{inventoryWarningDto.goodsName}"%"
        </if>
        <if test="inventoryWarningDto.specification != null and inventoryWarningDto.specification != ''">
            and gd.specification like "%"#{inventoryWarningDto.specification}"%"
        </if>
        <if test="inventoryWarningDto.skgCount != null and inventoryWarningDto.skgCount  != '' or inventoryWarningDto.skgCount == '0'.toString()">
            and IFNULL(skg.skg_count,0) = #{inventoryWarningDto.skgCount}
        </if>
        <if test="inventoryWarningDto.minimumStock != null and inventoryWarningDto.minimumStock  != '' or inventoryWarningDto.minimumStock == '0'.toString()">
            and gd.minimum_stock = #{inventoryWarningDto.minimumStock}
        </if>
        <if test="inventoryWarningDto.warehouseName != null and inventoryWarningDto.warehouseName != ''">
            and wh.warehouse_name like "%"#{inventoryWarningDto.warehouseName}"%"
        </if>
        <if test="inventoryWarningDto.monthsInStock != null and inventoryWarningDto.monthsInStock != ''">
            and gd.months_in_stock like "%"#{inventoryWarningDto.monthsInStock}"%"
        </if>
        <if test="inventoryWarningDto.productionSchedule != null and inventoryWarningDto.productionSchedule  != '' or inventoryWarningDto.productionSchedule == '0'.toString()">
            and pig.production_schedule = #{inventoryWarningDto.productionSchedule}
        </if>
      and gd.goods_id = skgid.goods_id
    </where>
  </select>
  <select id="selecInventoryWarningtCount" resultType="java.lang.Integer" >
      select count(gd.goods_id)
      FROM goods AS gd
      left join (select skgid,sum(skg_count) AS skg_count,warehouse_id,skg_type,gid from stock_kucun_goods GROUP BY gid) as skg ON (gd.goods_id = skg.gid)
      left join  warehouse as wh on (wh.warehouse_id = skg.warehouse_id)
      left join production_instruction_goods as pig on (gd.goods_id = pig.goods_id)
      left join (select gds.goods_id from goods as gds ,(select skgid,sum(skg_count) AS skg_count,warehouse_id,gid from stock_kucun_goods GROUP BY gid) as skgcom
                 where gds.goods_id = skgcom.gid  and gds.minimum_stock > skgcom.skg_count) as skgid on(gd.goods_id = skgid.goods_id)
    <where>
        <if test="inventoryWarningDto.partsCd != null and inventoryWarningDto.partsCd != ''">
            and gd.parts_cd like "%"#{inventoryWarningDto.partsCd}"%"
        </if>
        <if test="inventoryWarningDto.goodsName != null and inventoryWarningDto.goodsName != ''">
            and gd.goods_name like "%"#{inventoryWarningDto.goodsName}"%"
        </if>
        <if test="inventoryWarningDto.specification != null and inventoryWarningDto.specification != ''">
            and gd.specification like "%"#{inventoryWarningDto.specification}"%"
        </if>
        <if test="inventoryWarningDto.skgCount != null and inventoryWarningDto.skgCount  != '' or inventoryWarningDto.skgCount == '0'.toString()">
            and IFNULL(skg.skg_count,0) = #{inventoryWarningDto.skgCount}
        </if>
        <if test="inventoryWarningDto.minimumStock != null and inventoryWarningDto.minimumStock  != '' or inventoryWarningDto.minimumStock == '0'.toString()">
            and gd.minimum_stock = #{inventoryWarningDto.minimumStock}
        </if>
        <if test="inventoryWarningDto.warehouseName != null and inventoryWarningDto.warehouseName != ''">
            and wh.warehouse_name like "%"#{inventoryWarningDto.warehouseName}"%"
        </if>
        <if test="inventoryWarningDto.monthsInStock != null and inventoryWarningDto.monthsInStock != ''">
            and gd.months_in_stock like "%"#{inventoryWarningDto.monthsInStock}"%"
        </if>
        <if test="inventoryWarningDto.productionSchedule != null and inventoryWarningDto.productionSchedule  != '' or inventoryWarningDto.productionSchedule == '0'.toString()">
            and pig.production_schedule = #{inventoryWarningDto.productionSchedule}
        </if>
        and gd.goods_id = skgid.goods_id
    </where>
  </select>

  <select id="selectProductionOrderGoodsList" resultType="com.mingyuansoftware.aifactory.model.ProductionOrderGoods" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select gd.goods_id, gd.parts_cd, gd.goods_name,gd.unit,gd.specification,IFNULL(gd.monthly_sales_volume,0) AS monthly_sales_volume,IFNULL(pg.totalTaskAmount,0) as totalTaskAmount,
    pig.production_instruction_id,IFNULL(pig.unfinished_quantity,0) AS salesBooking,IFNULL(skg.skg_count,0) AS skg_count,pi.serial_number,IFNULL(gd.cycle,0) AS cycle
    from goods AS gd
    LEFT JOIN production_instruction_goods AS pig ON (gd.goods_id = pig.goods_id)
    LEFT JOIN (select goods_id,sum(unfinished_quantity) as totalTaskAmount from  production_instruction_goods GROUP BY goods_id) AS pg ON (pig.goods_id =pg.goods_id)
    LEFT JOIN (select skgid,sum(skg_count) AS skg_count,warehouse_id,skg_type,gid from stock_kucun_goods GROUP BY gid)
    AS skg ON (pig.goods_id = skg.gid)
    LEFT JOIN production_instruction as pi ON (pig.production_instruction_id = pi.production_instruction_id)
    where pig.unfinished_quantity > 0
    <if test="partsCd != null and partsCd != ''">
      AND gd.parts_cd like "%"#{partsCd}"%"
    </if>
    <if test="goodsName != null and goodsName != ''">
      AND gd.goods_name like "%"#{goodsName}"%"
    </if>
  </select>

  <select id="selectProductionOrderGoodsCount" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select COUNT(pig.production_instruction_id)
    from goods AS gd
    LEFT JOIN production_instruction_goods AS pig ON (gd.goods_id = pig.goods_id)
    LEFT JOIN (select goods_id,sum(not_out_quantity) AS salesBooking from sales_order_details group by goods_id) AS sod ON (sod.goods_id = pig.goods_id)
    LEFT JOIN (select skgid,sum(skg_count) AS skg_count,warehouse_id,skg_type,gid from stock_kucun_goods GROUP BY gid)
    AS skg ON (pig.goods_id = skg.gid)
    LEFT JOIN production_instruction as pi ON (pig.production_instruction_id = pi.production_instruction_id)
    where pig.unfinished_quantity > 0
    <if test="partsCd != null and partsCd != ''">
      AND gd.parts_cd like "%"#{partsCd}"%"
    </if>
    <if test="goodsName != null and goodsName != ''">
      AND gd.goods_name like "%"#{goodsName}"%"
    </if>
  </select>

  <select id="selectGoodsByPartsCd" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select goods_id, parts_cd, goods_name, variety_value, unit, specification, weight, unit_price,
    a_price, b_price, purchase_order_quantity, selling_price, wholesale_prices, minimum_stock,
    procurement_reserve_stock_index, japan_stock, tj_stock,purchase_price,
    salary_price, uf_id, create_time, update_time,average_price,supplier_id,boxes_number,bundle_number,
    monthly_sales_volume,selling_months,IFNULL(net_weight,0) AS net_weight,IFNULL(gross_weight,0) AS gross_weight,
    IFNULL(volume,0) AS volume,months_in_stock,category,wp_id
    from goods
    where parts_cd = #{partsCd}
  </select>
  <update id="updateAPriceByGoodsId" parameterType="com.mingyuansoftware.aifactory.model.Goods" >
    update goods
    set
    a_price = #{purchasePrice,jdbcType=DECIMAL},
    update_time = now()
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </update>

  <select id="selectGoodsInfoByGoodsNumber" resultType="com.mingyuansoftware.aifactory.model.Goods" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select gd.goods_id, gd.goods_number,parts_cd, gd.goods_name, gd.variety_value, gd.unit, gd.specification, gd.weight, gd.unit_price,
    gd.a_price, gd.b_price, gd.purchase_order_quantity, gd.selling_price, gd.wholesale_prices, gd.minimum_stock,
    gd.procurement_reserve_stock_index, gd.japan_stock, gd.tj_stock,gd.purchase_price,
    gd.salary_price, gd.uf_id, gd.create_time, gd.update_time,gd.average_price,gd.supplier_id,gd.boxes_number,gd.bundle_number,
    gd.monthly_sales_volume,gd.selling_months,gd.net_weight,gd.gross_weight,gd.volume,gd.months_in_stock,gd.category,gd.wp_id,uf.uf_save_path,
    wp.wp_name
    from goods as gd
    left join upload_files AS uf ON (gd.uf_id =uf.uf_id)
    left join warehouse_position AS wp ON (gd.wp_id =wp.wp_id)
    where goods_number = #{goodsNumber}
  </select>

  <update id="updateGoods" parameterType="com.mingyuansoftware.aifactory.model.dto.PDAGoodsDto" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update goods
    set
    goods_name = #{pdaGoodsDto.goodsName,jdbcType=VARCHAR},
    unit = #{pdaGoodsDto.unit,jdbcType=VARCHAR},
    specification = #{pdaGoodsDto.specification,jdbcType=VARCHAR},
    weight = #{pdaGoodsDto.weight,jdbcType=REAL},
    update_time = now(),
    wp_id =  #{pdaGoodsDto.wpId,jdbcType=INTEGER},
    uf_id = #{pdaGoodsDto.ufId,jdbcType=INTEGER}
    where goods_id = #{pdaGoodsDto.goodsId,jdbcType=INTEGER}
  </update>

  <update id="updateGoodsPrintByGoodsId">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update goods
    set
    is_print = #{isPrint},
    print_number = #{printNumber}
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </update>

  <select id="selectGoodsPrint" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select goods_id,goods_number, parts_cd, goods_name, variety_value, unit, specification, weight, unit_price,
    a_price, b_price, purchase_order_quantity, selling_price, wholesale_prices, minimum_stock,
    procurement_reserve_stock_index, japan_stock, tj_stock, purchase_price,
    salary_price, uf_id, create_time, update_time,average_price,supplier_id,boxes_number,bundle_number,
    monthly_sales_volume,selling_months,net_weight,gross_weight,volume,months_in_stock,category,wp_id,print_number
    from goods
    where is_print = 1 ORDER BY goods_id ASC limit 1
  </select>

    <insert id="insertList" parameterType="java.util.List" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <selectKey resultType="java.lang.Integer" keyProperty="goodsId" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into goods (goods_number,parts_cd, goods_name,goods_name_jp, variety_value,
        unit, specification, weight,
        unit_price, a_price, b_price,
        purchase_order_quantity, selling_price, wholesale_prices,
        minimum_stock, procurement_reserve_stock_index,
        japan_stock, tj_stock,
        purchase_price, salary_price, uf_id,
        create_time, update_time,average_price,supplier_id,boxes_number,bundle_number,
        monthly_sales_volume,selling_months,net_weight,gross_weight,volume,months_in_stock,category,wp_id
        )
        values
        <foreach collection="goodsList" item="item" index="index"
                 separator=",">
            (
            #{item.goodsNumber},
            #{item.partsCd},
            #{item.goodsName},
            #{item.goodsNameJp},
            #{item.varietyValue},
            #{item.unit},
            #{item.specification},
            #{item.weight},
            #{item.unitPrice},
            #{item.aPrice},
            #{item.bPrice},
            #{item.purchaseOrderQuantity},
            #{item.sellingPrice},
            #{item.wholesalePrices},
            #{item.minimumStock},
            #{item.procurementReserveStockIndex},
            #{item.japanStock},
            #{item.tjStock},
            #{item.purchasePrice},
            #{item.salaryPrice},
            #{item.ufId},
            #{item.createTime},
            #{item.updateTime},
            #{item.averagePrice},
            #{item.supplierId},
            #{item.boxesNumber},
            #{item.bundleNumber},
            #{item.monthlySalesVolume},
            #{item.sellingMonths},
            #{item.netWeight},
            #{item.grossWeight},
            #{item.volume},
            #{item.monthsInStock},
            #{item.category},
            #{item.wpId}
            )
        </foreach>
    </insert>
  <select id="selectGoodsListBySupplierId" resultMap="BaseResultMap" >
    select goods_id, parts_cd, goods_name, variety_value, unit, specification, weight, unit_price,
    a_price, b_price, purchase_order_quantity, selling_price, wholesale_prices, minimum_stock,
    procurement_reserve_stock_index, japan_stock, tj_stock, purchase_price,
    salary_price, uf_id, create_time, update_time,average_price,supplier_id,boxes_number,bundle_number,
    monthly_sales_volume,selling_months,net_weight,gross_weight,volume,months_in_stock,category,wp_id
    from goods
    where supplier_id = #{supplierId,jdbcType=INTEGER}
  </select>

  <select id="selectMaterialRequirementList" resultType="com.mingyuansoftware.aifactory.model.MaterialRequirements" >
    select gd.goods_id,gd.parts_cd, gd.goods_name,gd.specification,sum((IFNULL(pid.production_schedule,0)/IFNULL(pig.production_schedule,0))*IFNULL(pig.unfinished_quantity,0)-IFNULL(skg.skg_count,0)) as quantity,pi.serial_number as requirementSource
    from goods as gd
    left join production_instruction_detail as pid ON (gd.goods_id =pid.goods_id)
    left join production_instruction_goods as pig ON (pid.production_instruction_goods_id = pig.production_instruction_goods_id)
    left join production_instruction as pi ON (pi.production_instruction_id = pig.production_instruction_id)
    left join (select sum(skg_count) AS skg_count,gid from stock_kucun_goods GROUP BY gid) AS skg ON (gd.goods_id = skg.gid)
    where pig.state &lt;3 AND pid.production_schedule >0 and IFNULL(pid.production_schedule,0)-IFNULL(skg.skg_count,0)>0
    <if test="materialRequirements.partsCd != null and materialRequirements.partsCd != ''">
      AND gd.parts_cd like "%"#{materialRequirements.partsCd}"%"
    </if>
    <if test="materialRequirements.goodsName != null and materialRequirements.goodsName != ''">
      AND gd.goods_name like "%"#{materialRequirements.goodsName}"%"
    </if>
    <if test="materialRequirements.specification != null and materialRequirements.specification != ''">
      AND gd.specification like "%"#{materialRequirements.specification}"%"
    </if>
    <if test="materialRequirements.quantity != null and materialRequirements.quantity != '' or materialRequirements.quantity == '0'.toString() ">
      AND IFNULL(pid.production_schedule,0) = #{materialRequirements.quantity}
    </if>
    <if test="materialRequirements.requirementSource != null and materialRequirements.requirementSource != ''">
      AND pi.serial_number like "%"#{materialRequirements.requirementSource}"%"
    </if>
    GROUP BY gd.goods_id,pi.serial_number
  </select>

  <update id="updateGoodsPrint">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update goods
    set
    is_print = 1,
    print_number =1
  </update>

</mapper>